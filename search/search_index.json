{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MSU Cloud Fellowship 2021-2022 Welcome to the website for the MSU Cloud fellowship for 2021-2022. See our \" about \" page for more information about the program. Syllabus The program runs from Fall 2021 to Spring 2022 semester. Sessions are organized with pre-meeting materials (readings and videos), pre-requisites, and activities, which allow fellows to prepare for our Friday meetings where we will have hands-on activities and discussion. Schedule for Fall 2021 Session 1 : Introduction to the 21-22 Fellowship Sept 3: Meeing : program introductions and program overview (via zoom) Session 2 : Using the cloud for computing Sept 10: Using Virtual Machines workshop Session 3 : Cloud Storage Sept 24: Cloud Storage Workshop Session 4: Moving data to the cloud October 8: Data utilities and services workshop (Azure Data Factory) Session 5: Big Data Systems and the cloud Oct 22: Workshop: Using Azure DataBricks Session 6: Serverless, Workflow and Pipelines Oct 29: Workshop: TBD Session 7: Websites and applications Nov 12: Workshop: TBD Session 8: Wrap up and project proposals Dec 3: Meeting : review and feedback on project proposals & general discussion Dec 17: Final cloud fellowship project proposal submission date Schedule for Winter/Spring 2022 We will schedule group discussion sessions on project progress, and additional monthly 1-1 sessions with fellowship coordinators to assist with participant projects. Dates to be determined. Fellows will present their projects during a symposium to be held April 2022. Text We will occaisionally link to the following book: \"Cloud Computing for Science and Engineering\", Ian Foster and Dennis B. Gannon, September 2017 MIT Press website Book Website : Cloud4SciEng.org The book website does provide open access to individual chapters. Communications Fellows are encouraged to contact us with questions or if they are ever stuck on an activity we've assigned. In addition to email, we are utilizing Microsoft Teams at MSU (Fellows recieve a link in the welcome email). Please feel free to reach on out the MS Teams channel sent to participants at the beginning of the program. Mentioning one of us e.g. @billspat or @parvizm will help get our attention. Additionally you may email us at any time. If you are not a participant but have questions about the program, see the Contact page for how to get in touch with us. If you see a question or discussion on Teams please feel free to add any info or advice you may have, or even let us know that you have a similar question or issue. If you need interactive, on-going help it may be better to schedule a help session with a fellowship coordinator; and we are happy to meet individually for additional support. This may be especially effective when fellows are developing their projects. We also save time during our synchronous meetings for group discussions, so please bring any concerns, difficulties, or successes to our sessions! Meeting location Given the state of the pandemic in late summer 2021, we are hosting our first meeting (September 3) via zoom. Particpants will be sent a link via email. Locations for future meetings are to be determined and based on participant feedback. This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License","title":"Additional sessions TBD"},{"location":"#msu-cloud-fellowship-2021-2022","text":"Welcome to the website for the MSU Cloud fellowship for 2021-2022. See our \" about \" page for more information about the program.","title":"MSU Cloud Fellowship 2021-2022"},{"location":"#syllabus","text":"The program runs from Fall 2021 to Spring 2022 semester. Sessions are organized with pre-meeting materials (readings and videos), pre-requisites, and activities, which allow fellows to prepare for our Friday meetings where we will have hands-on activities and discussion.","title":"Syllabus"},{"location":"#schedule-for-fall-2021","text":"Session 1 : Introduction to the 21-22 Fellowship Sept 3: Meeing : program introductions and program overview (via zoom) Session 2 : Using the cloud for computing Sept 10: Using Virtual Machines workshop Session 3 : Cloud Storage Sept 24: Cloud Storage Workshop Session 4: Moving data to the cloud October 8: Data utilities and services workshop (Azure Data Factory) Session 5: Big Data Systems and the cloud Oct 22: Workshop: Using Azure DataBricks Session 6: Serverless, Workflow and Pipelines Oct 29: Workshop: TBD Session 7: Websites and applications Nov 12: Workshop: TBD Session 8: Wrap up and project proposals Dec 3: Meeting : review and feedback on project proposals & general discussion Dec 17: Final cloud fellowship project proposal submission date","title":"Schedule for Fall 2021"},{"location":"#schedule-for-winterspring-2022","text":"We will schedule group discussion sessions on project progress, and additional monthly 1-1 sessions with fellowship coordinators to assist with participant projects. Dates to be determined. Fellows will present their projects during a symposium to be held April 2022.","title":"Schedule for Winter/Spring 2022"},{"location":"#text","text":"We will occaisionally link to the following book: \"Cloud Computing for Science and Engineering\", Ian Foster and Dennis B. Gannon, September 2017 MIT Press website Book Website : Cloud4SciEng.org The book website does provide open access to individual chapters.","title":"Text"},{"location":"#communications","text":"Fellows are encouraged to contact us with questions or if they are ever stuck on an activity we've assigned. In addition to email, we are utilizing Microsoft Teams at MSU (Fellows recieve a link in the welcome email). Please feel free to reach on out the MS Teams channel sent to participants at the beginning of the program. Mentioning one of us e.g. @billspat or @parvizm will help get our attention. Additionally you may email us at any time. If you are not a participant but have questions about the program, see the Contact page for how to get in touch with us. If you see a question or discussion on Teams please feel free to add any info or advice you may have, or even let us know that you have a similar question or issue. If you need interactive, on-going help it may be better to schedule a help session with a fellowship coordinator; and we are happy to meet individually for additional support. This may be especially effective when fellows are developing their projects. We also save time during our synchronous meetings for group discussions, so please bring any concerns, difficulties, or successes to our sessions!","title":"Communications"},{"location":"#meeting-location","text":"Given the state of the pandemic in late summer 2021, we are hosting our first meeting (September 3) via zoom. Particpants will be sent a link via email. Locations for future meetings are to be determined and based on participant feedback. This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License","title":"Meeting location"},{"location":"about/","text":"About The MSU Cloud Fellowship The MSU Cloud Fellowship is a cross-disciplinary program produced by MSU\u2019s Institute of Cyber-Enabled Research (ICER) and the IT Services Analytics and Data Solutions (ADS) group for invited MSU doctoral students and postdoctoral researchers. As a part of this program, fellows will participate in a series of workshops during the fall semester to: Determine the aspects of your research that can be accomplished with cloud computing; Incorporate cloud-based systems into your research application or workflow; and Understand the strengths and limitations of commercial cloud computing with the goal of improving research yield and minimizing cost, and to develop a workflow that utilizes that knowledge. Background MSU doctoral students and postdoctoral researchers are invited to apply in the summer and approximately 18 are selected each year. The program started in 2019. If you are an MSU graduate student or post-doc and interested in participating next year, please check back in the Summer of 2022 for announcements on the invitation to participate, or request to join the MSU ICER mailing list Citing the MSU ICER Cloud Computing Fellowship in Research Publications We encourage cloud fellows to acknowledge the fellowship in publications arising from computational work performed during your fellowship project. Please let us know that you have referenced the fellowship, and we will link to your publication on the ICER publication site, which will further increase the visibility of your work. A sample statement can be: \"This work was supported in part through Michigan State University\u2019s Institute for Cyber-Enabled Research Cloud Computing Fellowship, with computational resources and services provided by Information Technology Services and the Office of Research and Innovation at Michigan State University.\u201d Cloud Fellowship Organizers Dr. Brian O'Shea Professor and Director, MSU ICER Role: Program Lead, ICER Dr. Brian O'Shea is a computational and theoretical astrophysicist studying cosmological structure formation, including galaxy formation and the behavior of the hot, diffuse plasma in the intergalactic medium and within galaxy clusters. He is also a co-author of the Enzo AMR code, an expert in high performance computing, and an advocate for open-source computing and open-source science. He received his B.S. in Engineering Physics at the University of Illinois in Urbana-Champaign (UIUC) in 2000, and his PhD in physics from UIUC in 2005 (with 2002-2005 being spent as a graduate student in residence at the Laboratory for Computational Astrophysics at UC San Diego and in the Theoretical Astrophysics Group at Los Alamos National Laboratory). Following that, he was a Director's Postdoctoral Fellow at Los Alamos National Laboratory, with a joint appointment between the Theoretical Astrophysics Group and the Applied Physics Division. Since 2008, he has been a member of the faculty at Michigan State University, with a joint appointment between the Department of Computational Mathematics, Science and Engineering (2015-present), the Department of Physics and Astronomy (2008-present), and the National Superconducting Cyclotron Laboratory (2014-present). From 2008-2015, Dr. O'Shea was a member of Lyman Briggs College. He has authored or co-authored over 75 peer-reviewed journal articles in astrophysics, computer science, and education research journals, and has received a variety of awards for his teaching and public outreach efforts. In 2016, he became a Fellow of the American Physical Society, and in 2019 he became the director of MSU's Institute for Cyber-Enabled Research. Danielle Barnes Assistant Director, ADS, MSU IT Services Role: Program Lead, IT Services Patrick Bills Data Science Technical Lead, MSU IT Services Role: Lead Instructor Pat Bills research background is in data systems for ecology (MS Entomology, MSU). He has experience in database design, R, Python, and web application programming. Pat has worked in research IT for over 25 yrs for departments and labs across MSU, including for MSU ICER as a research consultant and trainer. He is currently the technical lead for the data science team within ADS. Like many, he has built and worked with on-campus linux systems for many years including the MSU HPC. Pat started my cloud journey in 2017 during a workshop at the HPC conference where he saw Ian Foster (our textbook author) present his vision of research on the cloud. Since then he has used cloud services from Google, Amazon, and Azure - currently focusing on Microsoft Azure. ADS uses cloud services where appropriate for their data systems or applications, and he will use examples directly from that work in this class. Dr. Mahmoud Parvizi Research Consultant, MSU ICER Role: Assistant Instructor Mahmoud earned his PhD in physics from Vanderbilt University with research in high-energy theory in the context of early universe cosmology as well as computational astrophysics. In addition, Mahmoud earned an MBA with a concentration in finance from the University of Michigan - Flint. Mahmoud was formerly a postdoctoral research associate in the Department of Physics and Astronomy at Michigan State University with a focus on machine learning applications of cloud-computing workflows and currently a research consultant for the MSU Institute for Cyber-Enabled Research (ICER). He participated as a cloud fellow in 2019 and co-instructor of the cloud fellowship in 2020. Mahmoud\u2019s diverse research interests include mathematical and theoretical physics, data-intensive astrophysics, machine learning for precision health, and cloud-computing platforms for academic research. His expertise includes 1) quantum field theory in curved/non-stationary spacetimes; 2) finite temperature quantum field theory and open quantum systems; 3) automated and end-to-end intelligent data pipelines for signal processing using compressed sensing and applied harmonic analysis; 4) machine learning and cloud-computing applications for precision health. Chelsea Beck Data Warehouse Lead, ADS, MSU IT Services Role: Logistics and Organizational expertise Previous Cloud Fellows 2019-2020 MSU Cloud Computing Fellows Summary of the first cohort of MSU Cloud Computing Fellows 2020-2021 Introducing the 2020 Cloud Fellows 20-21 Cloud Computing Fellowship Culminates in Impressive Symposium","title":"About"},{"location":"about/#about-the-msu-cloud-fellowship","text":"The MSU Cloud Fellowship is a cross-disciplinary program produced by MSU\u2019s Institute of Cyber-Enabled Research (ICER) and the IT Services Analytics and Data Solutions (ADS) group for invited MSU doctoral students and postdoctoral researchers. As a part of this program, fellows will participate in a series of workshops during the fall semester to: Determine the aspects of your research that can be accomplished with cloud computing; Incorporate cloud-based systems into your research application or workflow; and Understand the strengths and limitations of commercial cloud computing with the goal of improving research yield and minimizing cost, and to develop a workflow that utilizes that knowledge.","title":"About The MSU Cloud Fellowship"},{"location":"about/#background","text":"MSU doctoral students and postdoctoral researchers are invited to apply in the summer and approximately 18 are selected each year. The program started in 2019. If you are an MSU graduate student or post-doc and interested in participating next year, please check back in the Summer of 2022 for announcements on the invitation to participate, or request to join the MSU ICER mailing list","title":"Background"},{"location":"about/#citing-the-msu-icer-cloud-computing-fellowship-in-research-publications","text":"We encourage cloud fellows to acknowledge the fellowship in publications arising from computational work performed during your fellowship project. Please let us know that you have referenced the fellowship, and we will link to your publication on the ICER publication site, which will further increase the visibility of your work. A sample statement can be: \"This work was supported in part through Michigan State University\u2019s Institute for Cyber-Enabled Research Cloud Computing Fellowship, with computational resources and services provided by Information Technology Services and the Office of Research and Innovation at Michigan State University.\u201d","title":"Citing the MSU ICER Cloud Computing Fellowship in Research Publications"},{"location":"about/#cloud-fellowship-organizers","text":"Dr. Brian O'Shea Professor and Director, MSU ICER Role: Program Lead, ICER Dr. Brian O'Shea is a computational and theoretical astrophysicist studying cosmological structure formation, including galaxy formation and the behavior of the hot, diffuse plasma in the intergalactic medium and within galaxy clusters. He is also a co-author of the Enzo AMR code, an expert in high performance computing, and an advocate for open-source computing and open-source science. He received his B.S. in Engineering Physics at the University of Illinois in Urbana-Champaign (UIUC) in 2000, and his PhD in physics from UIUC in 2005 (with 2002-2005 being spent as a graduate student in residence at the Laboratory for Computational Astrophysics at UC San Diego and in the Theoretical Astrophysics Group at Los Alamos National Laboratory). Following that, he was a Director's Postdoctoral Fellow at Los Alamos National Laboratory, with a joint appointment between the Theoretical Astrophysics Group and the Applied Physics Division. Since 2008, he has been a member of the faculty at Michigan State University, with a joint appointment between the Department of Computational Mathematics, Science and Engineering (2015-present), the Department of Physics and Astronomy (2008-present), and the National Superconducting Cyclotron Laboratory (2014-present). From 2008-2015, Dr. O'Shea was a member of Lyman Briggs College. He has authored or co-authored over 75 peer-reviewed journal articles in astrophysics, computer science, and education research journals, and has received a variety of awards for his teaching and public outreach efforts. In 2016, he became a Fellow of the American Physical Society, and in 2019 he became the director of MSU's Institute for Cyber-Enabled Research. Danielle Barnes Assistant Director, ADS, MSU IT Services Role: Program Lead, IT Services Patrick Bills Data Science Technical Lead, MSU IT Services Role: Lead Instructor Pat Bills research background is in data systems for ecology (MS Entomology, MSU). He has experience in database design, R, Python, and web application programming. Pat has worked in research IT for over 25 yrs for departments and labs across MSU, including for MSU ICER as a research consultant and trainer. He is currently the technical lead for the data science team within ADS. Like many, he has built and worked with on-campus linux systems for many years including the MSU HPC. Pat started my cloud journey in 2017 during a workshop at the HPC conference where he saw Ian Foster (our textbook author) present his vision of research on the cloud. Since then he has used cloud services from Google, Amazon, and Azure - currently focusing on Microsoft Azure. ADS uses cloud services where appropriate for their data systems or applications, and he will use examples directly from that work in this class. Dr. Mahmoud Parvizi Research Consultant, MSU ICER Role: Assistant Instructor Mahmoud earned his PhD in physics from Vanderbilt University with research in high-energy theory in the context of early universe cosmology as well as computational astrophysics. In addition, Mahmoud earned an MBA with a concentration in finance from the University of Michigan - Flint. Mahmoud was formerly a postdoctoral research associate in the Department of Physics and Astronomy at Michigan State University with a focus on machine learning applications of cloud-computing workflows and currently a research consultant for the MSU Institute for Cyber-Enabled Research (ICER). He participated as a cloud fellow in 2019 and co-instructor of the cloud fellowship in 2020. Mahmoud\u2019s diverse research interests include mathematical and theoretical physics, data-intensive astrophysics, machine learning for precision health, and cloud-computing platforms for academic research. His expertise includes 1) quantum field theory in curved/non-stationary spacetimes; 2) finite temperature quantum field theory and open quantum systems; 3) automated and end-to-end intelligent data pipelines for signal processing using compressed sensing and applied harmonic analysis; 4) machine learning and cloud-computing applications for precision health. Chelsea Beck Data Warehouse Lead, ADS, MSU IT Services Role: Logistics and Organizational expertise","title":"Cloud Fellowship Organizers"},{"location":"about/#previous-cloud-fellows","text":"2019-2020 MSU Cloud Computing Fellows Summary of the first cohort of MSU Cloud Computing Fellows 2020-2021 Introducing the 2020 Cloud Fellows 20-21 Cloud Computing Fellowship Culminates in Impressive Symposium","title":"Previous Cloud Fellows"},{"location":"cloud_glossary/","text":"Glossary of Cloud Terms Why? Researchers using the cloud must know a little about a lot of information technology to get computational work done in their domain specialty. Most cloud glossaries are for systems administrators, not the rest of us. This glossary is much more brief than Wikipedia and hopefully also provides the context a researcher needs to find what you need to use cloud services in your work. Do you have an item to add? Please contact us ! Other Glossaries https://www.cloudbank.org/cloud-terms The Glossary Azure Resource Manager ARM ARM Template JSON-formatted file that the ARM can use to create resources for you. Templates are a great shortcut and automation feature but difficult to edit. Blob Storage (Azure) Azure's object cloud storage, similar to S3 and google cloud storage buckets. CPU Central Processing Unit Arm CPU Most computers run Intel CPUs, but another company has compatible processessor that are slightly different. Some computational work is sensitive to CPU choice, and CPU choice can affect costs. Containers Or Docker Containers (not all containers need to be Docker the vast majority of container system use Docker). For R users, see https://colinfay.me/docker-r-reproducibility/ For Python users, there is https://www.netguru.com/blog/python-docker-tutorial although you could read either. Containers are a way to create a Linux-in-a-box that is more effieccient than a VM, and has a language for building containers meaning you can provision an entire system from code down to installing all the packages you need and copying your own program into it. Containers are widely use to package and distribute complex research software systems for example Bioinformatics workflow system \"Cromwell.\" This way reseearches can download and use a pre-installed system without the trouble of getting all of the pre-requistes (dependencies) installed on their machine. Docker is great for DevOps. DevOps This has many definitions but for researchers the shortcut is using code to make IT infrastructure. Helping developers (like you) do Ops (like sysadmins) with code. see IaC. Docker Docker is the most prevalent form of \"Containers\", e.g Docker is to containers as google is to search. See containers above for details. Note that Docker is many things as once: a method and format for Linux containers, a program for working with container ( e.g. docker build... ), a Company, and that's company's hub or repository for storing and access free containers (or your own). Cloud companies also have \"hubs\" or repositories for storing your own Docker containers. File Storage (Azure) Azure cloud storage that is more traditional file sharing, and that can be connected (mounted) to computers and other services using the SMB protocal, making it similar experience to departmental shared fileserver Firewall A common concept in networking, firewall software on a computer's networking components limits which kind of traffic can come in or out, and restricts which computer internet addresses can connect. Best practices suggest closing all connections via the firewall, only opening those connections for services you need, and only to those users (e.g. your own computer) you need to. Azure additionally has an option to \"allow connections from Azure networks\" so that you can freely connect from the portal, 'cloud shell', or connect from on azure service to another. The implication is that you trust all Azure services. GPU From Wikipedia: https://en.wikipedia.org/wiki/Graphics_processing_unit GPUs can be very helpful for some code written to use them, especially many machine learning libraries, and Virtual Machines may be provisioned with GPUs. Infrastructure as Code (IaC) In stead of using a GUI, or manual steps to create cloud computing, cloud resources may be created using scripts that interact with the cloud provider's api, and additional scripts can configure individual resources (such as to install software on a VM or configure a database). Doing this kind of \"provisioning\" with scripts makes it reproducible and debuggable which is at the heart of the Workflow or DevOps mentality. IP Address a unique string of characters that identifies each computer using the Internet Protocol to communicate over a network. Your computer will have a different IP address depending on where you are located (home, work, field). In addition, a home wifi router will assign a 'local' ip address for inside your home, but your 'public' internet IP address will be different. To find your own IP address, simply google \"what is my ip.\" All Azure services (VMs, data systems, etc) are assigned IP addresses via networking. see https://docs.microsoft.com/en-us/azure/virtual-network/public-ip-addresses Object Storage From NetApp \"What is object storage? : \"...also known as object-based storage, is a strategy that manages and manipulates data storage as distinct units, called objects. These objects are kept in a single storehouse and are not ingrained in files inside other folders. Instead, object storage combines the pieces of data that make up a file, adds all its relevant metadata to that file, and attaches a custom identifier.\" Blob storage is object storage. Objects (e.g. files) are retrieved from a large system via their identifier, not their name. Amazon S3 and Google Cloud storage are also object stores. On-prem \"On Premise\" refers to technology (computers, disks, networking, etc) that are on your institutions computer centers or in your own lab. Note that for some researchers, \"on-prem\" can still mean remove (e.g. our HPC is only accessible remotely, so it may not be obvious that it's on premise to users). Resource For AWS and Azure, a resource is an entity that you can work with. The means something you can created, edit or delete via their cloud interface. Could be a computer (virtual machine), a whole cluster (azure batch pool), or some tiny network setting (IP address). Resoures almost always cost money. Resources are listed in your standard dashboard. Resource Group Organizational scheme unique to Azure. Nearly all resources must be part of a group and the resource group must be selected (or created ) when creating other resources. Resource groups could be used for specific projects, for 'personal' resources used for multiple projects (or for azure things like cloud shell). Resource Manager Azure calls the system they use to interface between you and cloud resources the \"Azure Resource Manager\" or ARM. There used to be a different way to interact with resources hence this has a specific name, also becuase it adds consistency to the interface to Virtual Machine (aka VM) Creating a simulated computer hardware using software, to be able run a guest operating system inside a host system, such that the guest thinks it's running on an actual computer. Tensor Processing Unit (TPU) Google Tensor Processing Unit is specialized computer chip similar to GPUs , used by deep learning libraries such as TensorFlow ( which leads to the question of \"what is a tensor\" and that depends on who you ask but similar to matrix. Service Level Agreement (SLA) Level of service you expect from a vendor, laying out the metrics by which service is measured, as well as remedies or penalties should agreed-on service levels not be achieved. In Cloud this is often spells out 'uptime,' which is percent of time the system is not down, e.g. 99.99%, and guarantees against data loss and availability. For most research, uptime is not important as we are our own customer and can tolerate some downtime. Services Cloud \"services\" are often bundles of resources pulled together for coordinate function. Cloud companies offer hundreds of often closely overlapping services.","title":"Glossary of Cloud Terms"},{"location":"cloud_glossary/#glossary-of-cloud-terms","text":"","title":"Glossary of Cloud Terms"},{"location":"cloud_glossary/#why","text":"Researchers using the cloud must know a little about a lot of information technology to get computational work done in their domain specialty. Most cloud glossaries are for systems administrators, not the rest of us. This glossary is much more brief than Wikipedia and hopefully also provides the context a researcher needs to find what you need to use cloud services in your work. Do you have an item to add? Please contact us !","title":"Why?"},{"location":"cloud_glossary/#other-glossaries","text":"https://www.cloudbank.org/cloud-terms","title":"Other Glossaries"},{"location":"cloud_glossary/#the-glossary","text":"","title":"The Glossary"},{"location":"cloud_glossary/#azure-resource-manager","text":"ARM","title":"Azure Resource Manager"},{"location":"cloud_glossary/#arm-template","text":"JSON-formatted file that the ARM can use to create resources for you. Templates are a great shortcut and automation feature but difficult to edit.","title":"ARM Template"},{"location":"cloud_glossary/#blob-storage-azure","text":"Azure's object cloud storage, similar to S3 and google cloud storage buckets.","title":"Blob Storage (Azure)"},{"location":"cloud_glossary/#cpu","text":"Central Processing Unit","title":"CPU"},{"location":"cloud_glossary/#arm-cpu","text":"Most computers run Intel CPUs, but another company has compatible processessor that are slightly different. Some computational work is sensitive to CPU choice, and CPU choice can affect costs.","title":"Arm CPU"},{"location":"cloud_glossary/#containers","text":"Or Docker Containers (not all containers need to be Docker the vast majority of container system use Docker). For R users, see https://colinfay.me/docker-r-reproducibility/ For Python users, there is https://www.netguru.com/blog/python-docker-tutorial although you could read either. Containers are a way to create a Linux-in-a-box that is more effieccient than a VM, and has a language for building containers meaning you can provision an entire system from code down to installing all the packages you need and copying your own program into it. Containers are widely use to package and distribute complex research software systems for example Bioinformatics workflow system \"Cromwell.\" This way reseearches can download and use a pre-installed system without the trouble of getting all of the pre-requistes (dependencies) installed on their machine. Docker is great for DevOps.","title":"Containers"},{"location":"cloud_glossary/#devops","text":"This has many definitions but for researchers the shortcut is using code to make IT infrastructure. Helping developers (like you) do Ops (like sysadmins) with code. see IaC.","title":"DevOps"},{"location":"cloud_glossary/#docker","text":"Docker is the most prevalent form of \"Containers\", e.g Docker is to containers as google is to search. See containers above for details. Note that Docker is many things as once: a method and format for Linux containers, a program for working with container ( e.g. docker build... ), a Company, and that's company's hub or repository for storing and access free containers (or your own). Cloud companies also have \"hubs\" or repositories for storing your own Docker containers.","title":"Docker"},{"location":"cloud_glossary/#file-storage-azure","text":"Azure cloud storage that is more traditional file sharing, and that can be connected (mounted) to computers and other services using the SMB protocal, making it similar experience to departmental shared fileserver","title":"File Storage (Azure)"},{"location":"cloud_glossary/#firewall","text":"A common concept in networking, firewall software on a computer's networking components limits which kind of traffic can come in or out, and restricts which computer internet addresses can connect. Best practices suggest closing all connections via the firewall, only opening those connections for services you need, and only to those users (e.g. your own computer) you need to. Azure additionally has an option to \"allow connections from Azure networks\" so that you can freely connect from the portal, 'cloud shell', or connect from on azure service to another. The implication is that you trust all Azure services.","title":"Firewall"},{"location":"cloud_glossary/#gpu","text":"From Wikipedia: https://en.wikipedia.org/wiki/Graphics_processing_unit GPUs can be very helpful for some code written to use them, especially many machine learning libraries, and Virtual Machines may be provisioned with GPUs.","title":"GPU"},{"location":"cloud_glossary/#infrastructure-as-code-iac","text":"In stead of using a GUI, or manual steps to create cloud computing, cloud resources may be created using scripts that interact with the cloud provider's api, and additional scripts can configure individual resources (such as to install software on a VM or configure a database). Doing this kind of \"provisioning\" with scripts makes it reproducible and debuggable which is at the heart of the Workflow or DevOps mentality.","title":"Infrastructure as Code (IaC)"},{"location":"cloud_glossary/#ip-address","text":"a unique string of characters that identifies each computer using the Internet Protocol to communicate over a network. Your computer will have a different IP address depending on where you are located (home, work, field). In addition, a home wifi router will assign a 'local' ip address for inside your home, but your 'public' internet IP address will be different. To find your own IP address, simply google \"what is my ip.\" All Azure services (VMs, data systems, etc) are assigned IP addresses via networking. see https://docs.microsoft.com/en-us/azure/virtual-network/public-ip-addresses","title":"IP Address"},{"location":"cloud_glossary/#object-storage","text":"From NetApp \"What is object storage? : \"...also known as object-based storage, is a strategy that manages and manipulates data storage as distinct units, called objects. These objects are kept in a single storehouse and are not ingrained in files inside other folders. Instead, object storage combines the pieces of data that make up a file, adds all its relevant metadata to that file, and attaches a custom identifier.\" Blob storage is object storage. Objects (e.g. files) are retrieved from a large system via their identifier, not their name. Amazon S3 and Google Cloud storage are also object stores.","title":"Object Storage"},{"location":"cloud_glossary/#on-prem","text":"\"On Premise\" refers to technology (computers, disks, networking, etc) that are on your institutions computer centers or in your own lab. Note that for some researchers, \"on-prem\" can still mean remove (e.g. our HPC is only accessible remotely, so it may not be obvious that it's on premise to users).","title":"On-prem"},{"location":"cloud_glossary/#resource","text":"For AWS and Azure, a resource is an entity that you can work with. The means something you can created, edit or delete via their cloud interface. Could be a computer (virtual machine), a whole cluster (azure batch pool), or some tiny network setting (IP address). Resoures almost always cost money. Resources are listed in your standard dashboard.","title":"Resource"},{"location":"cloud_glossary/#resource-group","text":"Organizational scheme unique to Azure. Nearly all resources must be part of a group and the resource group must be selected (or created ) when creating other resources. Resource groups could be used for specific projects, for 'personal' resources used for multiple projects (or for azure things like cloud shell).","title":"Resource Group"},{"location":"cloud_glossary/#resource-manager","text":"Azure calls the system they use to interface between you and cloud resources the \"Azure Resource Manager\" or ARM. There used to be a different way to interact with resources hence this has a specific name, also becuase it adds consistency to the interface to","title":"Resource Manager"},{"location":"cloud_glossary/#virtual-machine","text":"(aka VM) Creating a simulated computer hardware using software, to be able run a guest operating system inside a host system, such that the guest thinks it's running on an actual computer.","title":"Virtual Machine"},{"location":"cloud_glossary/#tensor-processing-unit-tpu","text":"Google Tensor Processing Unit is specialized computer chip similar to GPUs , used by deep learning libraries such as TensorFlow ( which leads to the question of \"what is a tensor\" and that depends on who you ask but similar to matrix.","title":"Tensor Processing Unit (TPU)"},{"location":"cloud_glossary/#service-level-agreement-sla","text":"Level of service you expect from a vendor, laying out the metrics by which service is measured, as well as remedies or penalties should agreed-on service levels not be achieved. In Cloud this is often spells out 'uptime,' which is percent of time the system is not down, e.g. 99.99%, and guarantees against data loss and availability. For most research, uptime is not important as we are our own customer and can tolerate some downtime.","title":"Service Level Agreement (SLA)"},{"location":"cloud_glossary/#services","text":"Cloud \"services\" are often bundles of resources pulled together for coordinate function. Cloud companies offer hundreds of often closely overlapping services.","title":"Services"},{"location":"contact/","text":"Contacting Us If you are a cloud fellowship participant this year (or past participant!), please contact the instructors Pat Bills or Mahmoud Parvizi with any issues or questions related to the material or activities. The session meetings are designed to have plenty of time for questions, troubleshooting and discussion. We will also schedule office hours prior to meeting times to help with pre-meeting activities. If you have general questions about the MSU Cloud Fellowship, please contact Brian O'Shea or Danielle Barnes If you will be an MSU graduate student or post-doc in Fall 2022 and are interested in participating next year, please check back in the Summer of 2022 for announcements for invitation to participate, or request to join the MSU ICER mailing list If you are an MSU Researcher interested in using cloud for your research, please contact IT Services or MSU ICER via our ticketing systems and describe your needs.","title":"Contact"},{"location":"contact/#contacting-us","text":"If you are a cloud fellowship participant this year (or past participant!), please contact the instructors Pat Bills or Mahmoud Parvizi with any issues or questions related to the material or activities. The session meetings are designed to have plenty of time for questions, troubleshooting and discussion. We will also schedule office hours prior to meeting times to help with pre-meeting activities. If you have general questions about the MSU Cloud Fellowship, please contact Brian O'Shea or Danielle Barnes If you will be an MSU graduate student or post-doc in Fall 2022 and are interested in participating next year, please check back in the Summer of 2022 for announcements for invitation to participate, or request to join the MSU ICER mailing list If you are an MSU Researcher interested in using cloud for your research, please contact IT Services or MSU ICER via our ticketing systems and describe your needs.","title":"Contacting Us"},{"location":"people/","text":"About Us Cloud Fellowship Organizers Danielle Barnes Assistant Director, ADS, MSU IT Services Role: Program Lead, IT Services bio/photo Chelsea Beck Data Warehouse Lead, ADS, MSU IT Services Role: Logistics and Organization bio/photo Patrick Bills Data Science Technical Lead, MSU IT Services Role: Lead Instructor My research background is in data systems for ecology (MS Entomology, MSU). I have experience in database design, R, Python and web application programming. I've worked in research IT for over 25 yrs for departments and labs across MSU, including for MSU ICER as a research consultant and trainer. I'm currently the technical lead for the data science team in the Analytics and Data Solutions or A.D.S , part of MSU's central IT services. Like many I've built and worked with on-campus linux systems for many years including the MSU HPC. I started my cloud journey in 2017 during a workshop at the HPC conference where I saw Ian Foster (our textbook author) present his vision of research on the cloud. Since then I've used cloud services from Google, Amazon and Azure, currently focusing on Microsoft Azure. At MSU ADS we use cloud services where appropriate for our data systems or applications, and I'll use examples directly from our work in this class. Dr. Brian O'shea Professor and Director, MSU ICER Role: Program Lead, ICER Dr. Brian O'Shea is a computational and theoretical astrophysicist studying cosmological structure formation, including galaxy formation and the behavior of the hot, diffuse plasma in the intergalactic medium and within galaxy clusters. He is also a co-author of the Enzo AMR code, an expert in high performance computing, and an advocate for open-source computing and open-source science. He received his B.S. in Engineering Physics at the University of Illinois in Urbana-Champaign (UIUC) in 2000, and his PhD in physics from UIUC in 2005 (with 2002-2005 being spent as a graduate student in residence at the Laboratory for Computational Astrophysics at UC San Diego and in the Theoretical Astrophysics Group at Los Alamos National Laboratory). Following that, he was a Director's Postdoctoral Fellow at Los Alamos National Laboratory, with a joint appointment between the Theoretical Astrophysics Group and the Applied Physics Division. Since 2008, he has been a member of the faculty at Michigan State University, with a joint appointment between the Department of Computational Mathematics, Science and Engineering (2015-present), the Department of Physics and Astronomy (2008-present), and the National Superconducting Cyclotron Laboratory (2014-present). From 2008-2015, Dr. O'Shea was a member of Lyman Briggs College. He has authored or co-authored over 75 peer-reviewed journal articles in astrophysics, computer science, and education research journals, and has received a variety of awards for his teaching and public outreach efforts. In 2016, he became a Fellow of the American Physical Society, and in 2019 he became the director of MSU's Institute for Cyber-Enabled Research. Dr. Mahmoud Parvizi Research Consultant, MSU ICER Role: Assistant Instructor Mahmoud earned his PhD in physics from Vanderbilt University with research in high-energy theory in the context of early universe cosmology as well as computational astrophysics. In addition, Mahmoud earned an MBA with a concentration in finance from the University of Michigan - Flint. Mahmoud was formerly a postdoctoral research associate in the Department of Physics and Astronomy at Michigan State University with a focus on machine learning applications of cloud-computing workflows and currently a research consultant for the MSU Institute for Cyber-Enabled Research (ICER). He participated as a cloud fellow in 2019 and co-instructor of the cloud fellowship in 2020. Mahmoud\u2019s diverse research interests include mathematical and theoretical physics, data-intensive astrophysics, machine learning for precision health, and cloud-computing platforms for academic research. His expertise include: 1) quantum field theory in curved/non-stationary spacetimes; 2) finite temperature quantum field theory and open quantum systems; 3) automated and end-to-end intelligent data pipelines for signal processing using compressed sensing and applied harmonic analysis; 4) machine learning and cloud-computing applications for precision health. Previous Cloud Fellows 2019-2020 MSU Cloud Computing Fellows Summary of the first cohort of MSU Cloud Computing Fellows 2020-2021 Introducing the 2020 Cloud Fellows 20-21 Cloud Computing Fellowship Culminates in Impressive Symposium","title":"About Us"},{"location":"people/#about-us","text":"","title":"About Us"},{"location":"people/#cloud-fellowship-organizers","text":"Danielle Barnes Assistant Director, ADS, MSU IT Services Role: Program Lead, IT Services bio/photo Chelsea Beck Data Warehouse Lead, ADS, MSU IT Services Role: Logistics and Organization bio/photo Patrick Bills Data Science Technical Lead, MSU IT Services Role: Lead Instructor My research background is in data systems for ecology (MS Entomology, MSU). I have experience in database design, R, Python and web application programming. I've worked in research IT for over 25 yrs for departments and labs across MSU, including for MSU ICER as a research consultant and trainer. I'm currently the technical lead for the data science team in the Analytics and Data Solutions or A.D.S , part of MSU's central IT services. Like many I've built and worked with on-campus linux systems for many years including the MSU HPC. I started my cloud journey in 2017 during a workshop at the HPC conference where I saw Ian Foster (our textbook author) present his vision of research on the cloud. Since then I've used cloud services from Google, Amazon and Azure, currently focusing on Microsoft Azure. At MSU ADS we use cloud services where appropriate for our data systems or applications, and I'll use examples directly from our work in this class. Dr. Brian O'shea Professor and Director, MSU ICER Role: Program Lead, ICER Dr. Brian O'Shea is a computational and theoretical astrophysicist studying cosmological structure formation, including galaxy formation and the behavior of the hot, diffuse plasma in the intergalactic medium and within galaxy clusters. He is also a co-author of the Enzo AMR code, an expert in high performance computing, and an advocate for open-source computing and open-source science. He received his B.S. in Engineering Physics at the University of Illinois in Urbana-Champaign (UIUC) in 2000, and his PhD in physics from UIUC in 2005 (with 2002-2005 being spent as a graduate student in residence at the Laboratory for Computational Astrophysics at UC San Diego and in the Theoretical Astrophysics Group at Los Alamos National Laboratory). Following that, he was a Director's Postdoctoral Fellow at Los Alamos National Laboratory, with a joint appointment between the Theoretical Astrophysics Group and the Applied Physics Division. Since 2008, he has been a member of the faculty at Michigan State University, with a joint appointment between the Department of Computational Mathematics, Science and Engineering (2015-present), the Department of Physics and Astronomy (2008-present), and the National Superconducting Cyclotron Laboratory (2014-present). From 2008-2015, Dr. O'Shea was a member of Lyman Briggs College. He has authored or co-authored over 75 peer-reviewed journal articles in astrophysics, computer science, and education research journals, and has received a variety of awards for his teaching and public outreach efforts. In 2016, he became a Fellow of the American Physical Society, and in 2019 he became the director of MSU's Institute for Cyber-Enabled Research. Dr. Mahmoud Parvizi Research Consultant, MSU ICER Role: Assistant Instructor Mahmoud earned his PhD in physics from Vanderbilt University with research in high-energy theory in the context of early universe cosmology as well as computational astrophysics. In addition, Mahmoud earned an MBA with a concentration in finance from the University of Michigan - Flint. Mahmoud was formerly a postdoctoral research associate in the Department of Physics and Astronomy at Michigan State University with a focus on machine learning applications of cloud-computing workflows and currently a research consultant for the MSU Institute for Cyber-Enabled Research (ICER). He participated as a cloud fellow in 2019 and co-instructor of the cloud fellowship in 2020. Mahmoud\u2019s diverse research interests include mathematical and theoretical physics, data-intensive astrophysics, machine learning for precision health, and cloud-computing platforms for academic research. His expertise include: 1) quantum field theory in curved/non-stationary spacetimes; 2) finite temperature quantum field theory and open quantum systems; 3) automated and end-to-end intelligent data pipelines for signal processing using compressed sensing and applied harmonic analysis; 4) machine learning and cloud-computing applications for precision health.","title":"Cloud Fellowship Organizers"},{"location":"people/#previous-cloud-fellows","text":"2019-2020 MSU Cloud Computing Fellows Summary of the first cohort of MSU Cloud Computing Fellows 2020-2021 Introducing the 2020 Cloud Fellows 20-21 Cloud Computing Fellowship Culminates in Impressive Symposium","title":"Previous Cloud Fellows"},{"location":"references/","text":"Azure Resources General Resources Main Azue Documentation : https://docs.microsoft.com/en-us/azure/ List of All Azure Services : https://portal.azure.com/#allservices Azure Portal Documentation : https://docs.microsoft.com/en-us/azure/azure-portal/ Azure Tips and Tricks : https://microsoft.github.io/AzureTipsAndTricks/ Azure Portal \"How to\" series - focused on using the Azure portal to do several different things. Many do not apply to use (e.g. Azure Arc) but there are gems : https://youtube.com/playlist?list=PLLasX02E8BPBKgXP4oflOL29TtqTzwhxR Interface: Command Line Command-line progamming of Cloud Services Azure PowerShell (Windows) https://docs.microsoft.com/en-us/powershell/azure/ Introduction to PowerShell : https://docs.microsoft.com/en-us/powershell/azure/get-started-azureps?view=azps-3.0.0 Azure Command Line Interface (CLI) (MacOS, Linux): https://docs.microsoft.com/en-us/cli/azure Introduction to Azure CLI https://docs.microsoft.com/en-us/cli/azure/get-started-with-azure-cli?view=azure-cli-latest Storage Create a Storage Account: https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account Azure Storage Explorer: https://azure.microsoft.com/en-us/features/storage-explorer/ Blob Storage Documentation: https://docs.microsoft.com/en-us/azure/storage/blobs/ Create and Manage a Storage Account: https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account Using the CLI with Storage Reference: https://docs.microsoft.com/en-us/cli/azure/storage/account Using PowerShell Storage Reference: https://docs.microsoft.com/en-us/powershell/module/azure.storage Create blob storage with CLI: https://docs.microsoft.com/en-us/azure/storage/common/storage-azure-cli Create blob storage with PowerShell: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-powershell Compute Overview of Compute Options: https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/compute-overview Choosing an Azure Compute Service (Decision Tree): https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/compute-decision-tree Interface: ARM templates Azure Resource Manager Templates are JSON-formatted configuration files that dictate which resources to create. Overview of ARM templates: https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview explore quick start ARM templates (web): https://azure.microsoft.com/en-us/resources/templates/ explore quick start ARM templates (github): https://github.com/Azure/AzureStack-QuickStart-Templates many of these github repositories include a \"deploy to Azure\" button that will run the template via the portal and create resources. Programming with SDKs R and Azure https://blog.revolutionanalytics.com/2018/12/azurestor.html https://cloudblogs.microsoft.com/opensource/2019/07/01/azurer-available-create-manage-monitor-azure-services-r/ https://docs.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/r-developers-guide https://docs.microsoft.com/en-us/azure/machine-learning/studio-module-reference/r-packages-supported-by-azure-machine-learning https://github.com/Azure/AzureContainers https://github.com/Azure/AzureR https://github.com/Azure/AzureRMR Python and Azure https://azure.microsoft.com/en-us/develop/python/ https://docs.microsoft.com/en-us/azure/python/ https://github.com/Azure/azure-sdk-for-python https://github.com/Azure/azure-storage-python https://azure.github.io/azure-sdk/releases/latest/all/python.html (Note that pypi.org/project/azure/ is deprecated/obsolete if you find that via google) MATLAB and Azure https://blogs.msdn.microsoft.com/uk_faculty_connection/2017/06/29/running-matlab-on-azure-provision-a-matlab-distributed-computing-server-using-azure-vms/ https://github.com/mathworks-ref-arch/matlab-on-azure https://www.itcentralstation.com/products/comparisons/mathworks-matlab_vs_microsoft-azure-machine-learning-studio https://www.mathworks.com/solutions/cloud.html Cosmos DB CosmosDB is a very large scale data system that can act like other database systems including SQL, MongoDB (a popular no-sql database), and others. It's advantage is that it can handle extremely large data sets (65tB) but is easy to get started. Google and AWS have similar offereings ( \"BigQuery\" and \"Aurora\" respectively). If your data is not large, consider using SQL data systems which are also very widely used (and can be used on your own computer) Intro: https://docs.microsoft.com/en-us/azure/cosmos-db/introduction It can be free to use, but you have to turn that on when creating the service for your account: https://docs.microsoft.com/en-us/azure/cosmos-db/free-tier You can run a notebook inside the databaase to queery data with python : Notebook Description: https://docs.microsoft.com/en-us/azure/cosmos-db/cosmosdb-jupyter-notebooks Service announcement: https://azure.microsoft.com/en-us/blog/analyze-and-visualize-your-data-with-azure-cosmos-db-notebooks/ Video: https://www.youtube.com/watch?v=OrnZMkP5Eq4&list=PLLasX02E8BPBKgXP4oflOL29TtqTzwhxR&index=7","title":"References"},{"location":"references/#azure-resources","text":"","title":"Azure Resources"},{"location":"references/#general-resources","text":"Main Azue Documentation : https://docs.microsoft.com/en-us/azure/ List of All Azure Services : https://portal.azure.com/#allservices Azure Portal Documentation : https://docs.microsoft.com/en-us/azure/azure-portal/ Azure Tips and Tricks : https://microsoft.github.io/AzureTipsAndTricks/ Azure Portal \"How to\" series - focused on using the Azure portal to do several different things. Many do not apply to use (e.g. Azure Arc) but there are gems : https://youtube.com/playlist?list=PLLasX02E8BPBKgXP4oflOL29TtqTzwhxR","title":"General Resources"},{"location":"references/#interface-command-line","text":"Command-line progamming of Cloud Services Azure PowerShell (Windows) https://docs.microsoft.com/en-us/powershell/azure/ Introduction to PowerShell : https://docs.microsoft.com/en-us/powershell/azure/get-started-azureps?view=azps-3.0.0 Azure Command Line Interface (CLI) (MacOS, Linux): https://docs.microsoft.com/en-us/cli/azure Introduction to Azure CLI https://docs.microsoft.com/en-us/cli/azure/get-started-with-azure-cli?view=azure-cli-latest","title":"Interface: Command Line"},{"location":"references/#storage","text":"Create a Storage Account: https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account Azure Storage Explorer: https://azure.microsoft.com/en-us/features/storage-explorer/ Blob Storage Documentation: https://docs.microsoft.com/en-us/azure/storage/blobs/ Create and Manage a Storage Account: https://docs.microsoft.com/en-us/azure/storage/common/storage-quickstart-create-account Using the CLI with Storage Reference: https://docs.microsoft.com/en-us/cli/azure/storage/account Using PowerShell Storage Reference: https://docs.microsoft.com/en-us/powershell/module/azure.storage Create blob storage with CLI: https://docs.microsoft.com/en-us/azure/storage/common/storage-azure-cli Create blob storage with PowerShell: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-powershell","title":"Storage"},{"location":"references/#compute","text":"Overview of Compute Options: https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/compute-overview Choosing an Azure Compute Service (Decision Tree): https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/compute-decision-tree","title":"Compute"},{"location":"references/#interface-arm-templates","text":"Azure Resource Manager Templates are JSON-formatted configuration files that dictate which resources to create. Overview of ARM templates: https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview explore quick start ARM templates (web): https://azure.microsoft.com/en-us/resources/templates/ explore quick start ARM templates (github): https://github.com/Azure/AzureStack-QuickStart-Templates many of these github repositories include a \"deploy to Azure\" button that will run the template via the portal and create resources.","title":"Interface: ARM templates"},{"location":"references/#programming-with-sdks","text":"","title":"Programming with SDKs"},{"location":"references/#r-and-azure","text":"https://blog.revolutionanalytics.com/2018/12/azurestor.html https://cloudblogs.microsoft.com/opensource/2019/07/01/azurer-available-create-manage-monitor-azure-services-r/ https://docs.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/r-developers-guide https://docs.microsoft.com/en-us/azure/machine-learning/studio-module-reference/r-packages-supported-by-azure-machine-learning https://github.com/Azure/AzureContainers https://github.com/Azure/AzureR https://github.com/Azure/AzureRMR","title":"R and Azure"},{"location":"references/#python-and-azure","text":"https://azure.microsoft.com/en-us/develop/python/ https://docs.microsoft.com/en-us/azure/python/ https://github.com/Azure/azure-sdk-for-python https://github.com/Azure/azure-storage-python https://azure.github.io/azure-sdk/releases/latest/all/python.html (Note that pypi.org/project/azure/ is deprecated/obsolete if you find that via google)","title":"Python and Azure"},{"location":"references/#matlab-and-azure","text":"https://blogs.msdn.microsoft.com/uk_faculty_connection/2017/06/29/running-matlab-on-azure-provision-a-matlab-distributed-computing-server-using-azure-vms/ https://github.com/mathworks-ref-arch/matlab-on-azure https://www.itcentralstation.com/products/comparisons/mathworks-matlab_vs_microsoft-azure-machine-learning-studio https://www.mathworks.com/solutions/cloud.html","title":"MATLAB and Azure"},{"location":"references/#cosmos-db","text":"CosmosDB is a very large scale data system that can act like other database systems including SQL, MongoDB (a popular no-sql database), and others. It's advantage is that it can handle extremely large data sets (65tB) but is easy to get started. Google and AWS have similar offereings ( \"BigQuery\" and \"Aurora\" respectively). If your data is not large, consider using SQL data systems which are also very widely used (and can be used on your own computer) Intro: https://docs.microsoft.com/en-us/azure/cosmos-db/introduction It can be free to use, but you have to turn that on when creating the service for your account: https://docs.microsoft.com/en-us/azure/cosmos-db/free-tier You can run a notebook inside the databaase to queery data with python : Notebook Description: https://docs.microsoft.com/en-us/azure/cosmos-db/cosmosdb-jupyter-notebooks Service announcement: https://azure.microsoft.com/en-us/blog/analyze-and-visualize-your-data-with-azure-cosmos-db-notebooks/ Video: https://www.youtube.com/watch?v=OrnZMkP5Eq4&list=PLLasX02E8BPBKgXP4oflOL29TtqTzwhxR&index=7","title":"Cosmos DB"},{"location":"session_cloud_storage/","text":"Session 3: Cloud Storage Introduction Central to using cloud for nearly all services is storing data. Cloud storage is quite different from what most are used to related to saving a file to your disk or USB removable media or even our HPC. During our workshop on creating a VM we didn't use cloud storage, we simply create a VM \"virtual disk\" that is attached to the VM just like your hard drive is attached to your own computer. However there are disadvantats to this : 1. the main OS disk is typically deleted when the VM is deleted, although yuo can create a 'durable' disk to share 1. the data on the main OS disk is tied to that Virtual Machine and hence that operating system, that is, it's typically unacceesbile from other cloud services 1. it is limited in size. The largest of virtual disks are around 1 TB. Azure Cloud storage accounts are limited to 5 TB and you may have multiple storage accounts. 1. You can only move data to/from a virtual or shared disk storage using a virtual machine 1. Most importantly virtual disks very expensive compared to cloud storage Cloud companies think of \"storage\" as anything that save files, or perhaps more importantly anything they can market to you as something to save files. Readings Storage as a Service from \"Cloud Computing for Science and Engineering\" Azure Storage Product Offerings Activities Download and install the Azure Cloud Storage Explorer See the \"Download now\" button at the top of that page. You may review the content of the page complete exercise Using Azure Cloud Storage Workshop : using Cloud storage discussion what is cloud storage? review of provided materials concept review: cloud storage vs VM disks discuss exercise : success demonstration copy data from HPC to Virtual machine using Python with Optional Exercise For Intermediate Python users, and if you have time and interest, consider this tutorial from Azure: Quickstart: Manage blobs with Python v12 SDK Requirements: use the blob storage account you created in the excercise above familiarity with Azure portal Python installed on your cmputer (suggest python 3.6 minimal) familiarity with the terminal and command line We can only provide help/troubleshooting after the workshop session","title":"3. Cloud Storage"},{"location":"session_cloud_storage/#session-3-cloud-storage","text":"","title":"Session 3: Cloud Storage"},{"location":"session_cloud_storage/#introduction","text":"Central to using cloud for nearly all services is storing data. Cloud storage is quite different from what most are used to related to saving a file to your disk or USB removable media or even our HPC. During our workshop on creating a VM we didn't use cloud storage, we simply create a VM \"virtual disk\" that is attached to the VM just like your hard drive is attached to your own computer. However there are disadvantats to this : 1. the main OS disk is typically deleted when the VM is deleted, although yuo can create a 'durable' disk to share 1. the data on the main OS disk is tied to that Virtual Machine and hence that operating system, that is, it's typically unacceesbile from other cloud services 1. it is limited in size. The largest of virtual disks are around 1 TB. Azure Cloud storage accounts are limited to 5 TB and you may have multiple storage accounts. 1. You can only move data to/from a virtual or shared disk storage using a virtual machine 1. Most importantly virtual disks very expensive compared to cloud storage Cloud companies think of \"storage\" as anything that save files, or perhaps more importantly anything they can market to you as something to save files.","title":"Introduction"},{"location":"session_cloud_storage/#readings","text":"Storage as a Service from \"Cloud Computing for Science and Engineering\" Azure Storage Product Offerings","title":"Readings"},{"location":"session_cloud_storage/#activities","text":"Download and install the Azure Cloud Storage Explorer See the \"Download now\" button at the top of that page. You may review the content of the page complete exercise Using Azure Cloud Storage","title":"Activities"},{"location":"session_cloud_storage/#workshop-using-cloud-storage","text":"discussion what is cloud storage? review of provided materials concept review: cloud storage vs VM disks discuss exercise : success demonstration copy data from HPC to Virtual machine using Python with","title":"Workshop : using Cloud storage"},{"location":"session_cloud_storage/#optional-exercise","text":"For Intermediate Python users, and if you have time and interest, consider this tutorial from Azure: Quickstart: Manage blobs with Python v12 SDK Requirements: use the blob storage account you created in the excercise above familiarity with Azure portal Python installed on your cmputer (suggest python 3.6 minimal) familiarity with the terminal and command line We can only provide help/troubleshooting after the workshop session","title":"Optional Exercise"},{"location":"session_cloud_storage/exercise_using_azure_cloud_storage/","text":"Exercise: Using Azure Cloud Storage Pre-requisites Please review materials for this session to understand cloud storage and the different types that Azure offers Introductions You will create a few different types of cloud storage and transfer files into it using software provided by Azure.","title":"Exercise: Using Azure Cloud Storage"},{"location":"session_cloud_storage/exercise_using_azure_cloud_storage/#exercise-using-azure-cloud-storage","text":"","title":"Exercise: Using Azure Cloud Storage"},{"location":"session_cloud_storage/exercise_using_azure_cloud_storage/#pre-requisites","text":"Please review materials for this session to understand cloud storage and the different types that Azure offers","title":"Pre-requisites"},{"location":"session_cloud_storage/exercise_using_azure_cloud_storage/#introductions","text":"You will create a few different types of cloud storage and transfer files into it using software provided by Azure.","title":"Introductions"},{"location":"session_how_to_cloud/","text":"What is the cloud and how does it work? When many people think of \"cloud computing\" they think of computers in the cloud, or virtual machines. Cloud computing companies offer much more than just virtualized hardware, but this is a good place to start. This session is designed to be a hands-on workshop where we walk-through creating the resources needed for to run a computer in the cloud, logging into this computer, copying data and using that data in a program. At the end of the session you should have a good introduction of what it means to \"cloud compute.\" Readings The NIST Definition of Cloud Computing The framework that most widely used to describe aspects of cloud computing, and categorize cloud sevices. Microsoft Reference Architecture: What is Infrastructure as a Service? What's the difference between cloud and virtualization? from RedHat, a Linux Operating system company Orientation Azure Portal Activities create a storage account (link to page with details) Workshop September 10, 2021. Location TBD Creating (and deleting) a Virtual Machine with Azure Post-workshop discussion For those who've used HPC, compare this experience Discussion prompts: security","title":"2. How does the cloud work?"},{"location":"session_how_to_cloud/#what-is-the-cloud-and-how-does-it-work","text":"When many people think of \"cloud computing\" they think of computers in the cloud, or virtual machines. Cloud computing companies offer much more than just virtualized hardware, but this is a good place to start. This session is designed to be a hands-on workshop where we walk-through creating the resources needed for to run a computer in the cloud, logging into this computer, copying data and using that data in a program. At the end of the session you should have a good introduction of what it means to \"cloud compute.\"","title":"What is the cloud and how does it work?"},{"location":"session_how_to_cloud/#readings","text":"The NIST Definition of Cloud Computing The framework that most widely used to describe aspects of cloud computing, and categorize cloud sevices. Microsoft Reference Architecture: What is Infrastructure as a Service? What's the difference between cloud and virtualization? from RedHat, a Linux Operating system company Orientation Azure Portal","title":"Readings"},{"location":"session_how_to_cloud/#activities","text":"create a storage account (link to page with details)","title":"Activities"},{"location":"session_how_to_cloud/#workshop","text":"September 10, 2021. Location TBD Creating (and deleting) a Virtual Machine with Azure","title":"Workshop"},{"location":"session_how_to_cloud/#post-workshop-discussion","text":"For those who've used HPC, compare this experience Discussion prompts: security","title":"Post-workshop discussion"},{"location":"session_how_to_cloud/workshop-creatingvm/","text":"Workshop 1: Creating your own cloud computer Introduction This workshop walks you though , using Microsoft Azure, the creation of a cloud virtual machine and opens access to it. We will use command line access to use the remote machine to download data and run a calculation. this is a similar experience to using any remote Linux system, such as the MSU HPCC. Pre-requistites Microsoft Azure account (provisioned for participants) No previous experience with cloud virtual machines necessary Using the Azure portal to create a resource group (should this be creatd ahead of time?) Create a virtual machine using a template Create a data science virtual machine using a template. portal create... in search bar type \"data science virtual machine select \"d s v m Ubuntu\" select \"pre-configured\" click \"dev test\" and then below click \"general purpose\", and then 'next' \"Basics\" Section: in next screen select or entered the following options. Resource Group: select your resource group VM Name: please enter a name with the following pattern cf-dvsm-netid using your own netid Region : select the default Image : should say \"Data Science Virtual machine - Unbuntu 18.0.4 - Gen 1\" Azure Spot Instance : leave unchecked Size : Standard_D2s_v3 ($80/month) note: it will only cost pennies per hour Administrator account : select \"password\" note: ssh key is more secure but requires time consuming setup Username : enter your netid this is easy to remember Password : please enter a complex password don't use your actual netid password, also write it down as we will only use it once and it can't be recovered click \"next (disks)\" Note in this \"Create a Virtual Machine page, there are several sections across the top Basics Disks Networking Management Advanced Tags Review + create We can skip all sections now and go to \"Review + create\" Product details: note the costs (mine is 0.1100 USD/hr) click the \"Create\" button at the bottom of this screen wait. the screen should say \"Deployment in Progress\" report any errors or problems click \"Go to Resource\" when it's complete Exploring the Azure portal this portal page lists details about this virtual machine. Connect options to connect to remote linux computer: ssh , alwayws works, requires Mac terminal or windows or mobaxterm Rstudio Server (must be started) Jupyter Notebooks (must be started) Remote desktop (must be installed on VM, and a client must be installed on laptop) test connection: in the left hand menu of the VM resource, find the \"connect\" section click the \"ssh\" section if not already selected near the bottom click \"test your connection\" connect with ssh: open your terminal program in the portal, find the machine ip address issue command ssh azureuser@<ip> Download Data Using standard Linux tools we will download data onto this remote computer Log-in via ssh if you haven't already use the following command to download data set git clone https://github.com/fivethirtyeight/data/tree/master/college-majors review the files using linux commands cd college-majors; ls head grad-students.csv Start R studio Server","title":"Workshop 1: Creating your own cloud computer"},{"location":"session_how_to_cloud/workshop-creatingvm/#workshop-1-creating-your-own-cloud-computer","text":"","title":"Workshop 1: Creating your own cloud computer"},{"location":"session_how_to_cloud/workshop-creatingvm/#introduction","text":"This workshop walks you though , using Microsoft Azure, the creation of a cloud virtual machine and opens access to it. We will use command line access to use the remote machine to download data and run a calculation. this is a similar experience to using any remote Linux system, such as the MSU HPCC.","title":"Introduction"},{"location":"session_how_to_cloud/workshop-creatingvm/#pre-requistites","text":"Microsoft Azure account (provisioned for participants) No previous experience with cloud virtual machines necessary","title":"Pre-requistites"},{"location":"session_how_to_cloud/workshop-creatingvm/#using-the-azure-portal-to-create-a-resource-group","text":"(should this be creatd ahead of time?)","title":"Using the Azure portal to create a resource group"},{"location":"session_how_to_cloud/workshop-creatingvm/#create-a-virtual-machine-using-a-template","text":"Create a data science virtual machine using a template. portal create... in search bar type \"data science virtual machine select \"d s v m Ubuntu\" select \"pre-configured\" click \"dev test\" and then below click \"general purpose\", and then 'next' \"Basics\" Section: in next screen select or entered the following options. Resource Group: select your resource group VM Name: please enter a name with the following pattern cf-dvsm-netid using your own netid Region : select the default Image : should say \"Data Science Virtual machine - Unbuntu 18.0.4 - Gen 1\" Azure Spot Instance : leave unchecked Size : Standard_D2s_v3 ($80/month) note: it will only cost pennies per hour Administrator account : select \"password\" note: ssh key is more secure but requires time consuming setup Username : enter your netid this is easy to remember Password : please enter a complex password don't use your actual netid password, also write it down as we will only use it once and it can't be recovered click \"next (disks)\" Note in this \"Create a Virtual Machine page, there are several sections across the top Basics Disks Networking Management Advanced Tags Review + create We can skip all sections now and go to \"Review + create\" Product details: note the costs (mine is 0.1100 USD/hr) click the \"Create\" button at the bottom of this screen wait. the screen should say \"Deployment in Progress\" report any errors or problems click \"Go to Resource\" when it's complete","title":"Create a virtual machine using a template"},{"location":"session_how_to_cloud/workshop-creatingvm/#exploring-the-azure-portal","text":"this portal page lists details about this virtual machine.","title":"Exploring the Azure portal"},{"location":"session_how_to_cloud/workshop-creatingvm/#connect","text":"options to connect to remote linux computer: ssh , alwayws works, requires Mac terminal or windows or mobaxterm Rstudio Server (must be started) Jupyter Notebooks (must be started) Remote desktop (must be installed on VM, and a client must be installed on laptop) test connection: in the left hand menu of the VM resource, find the \"connect\" section click the \"ssh\" section if not already selected near the bottom click \"test your connection\" connect with ssh: open your terminal program in the portal, find the machine ip address issue command ssh azureuser@<ip>","title":"Connect"},{"location":"session_how_to_cloud/workshop-creatingvm/#download-data","text":"Using standard Linux tools we will download data onto this remote computer Log-in via ssh if you haven't already use the following command to download data set git clone https://github.com/fivethirtyeight/data/tree/master/college-majors review the files using linux commands cd college-majors; ls head grad-students.csv","title":"Download Data"},{"location":"session_how_to_cloud/workshop-creatingvm/#start-r-studio-server","text":"","title":"Start R studio Server"},{"location":"session_introduction/","text":"Session 1: Introduction to the 2021-22 MSU Cloud Fellowship You don't have to face the clouds alone Welcome! The goals of this session are to orient you to this program, set up our technology, introduce ourselves, provide some background on cloud computing, and discuss what all of our expectations are. For this session, like the others, we have some pre-session activities for the week, followed by a meeting Friday, September 3, from 2:00-3:30pm. Activities: Please complete the following activities prior to our first synchronous meeting September 3. Complete a Brief Survey All 2021-22 participants were sent an introductory email that included a link to a brief survey. preferences and techmology exposure. Please complete this survey prior to our first meeting. Introduce yourself on Microsoft Teams You should have all been given access to a Team \"MSU ICER Cloud Fellowship\" via your NetID. Please log in to Teams (via the web https://teams.microsoft.com/ or using the Teams client) Post a new message in the \"general\" channel just saying \"hello\" and include your name, department and how you prefer to be addressed. If necessary MSU IT has documentation about MS Teams here: https://tech.msu.edu/technology/collaborative-tools/spartan365/ ( the link on that page requires yet another MSU log-in) Confirm Access to Azure Portal Go to https://portal.azure.com . Log in with your MSU netid and password. Ensure you can access the Azure main web \"portal.\" You don't need to (and shouldn't) create any new resources or work with this website; simply confirm you have access. You may see a list of \"resources\" and will introduce Azure during our first meeting. If you have any issues, trouble with these activities, or won't be able to attend the introductory meeting, or have any questions at all about your participating in the fellowship, please contact us . Note there will be time for questions and dicussion during our first meeting. Readings Chapter 1: Orienting in the cloud universe from \"Cloud Computing for Science and Engineering\", Foster and Gannon ( Alternative link to publisher preview chapter ) Using Cloud Computing for Academic Research , Mahmoud Parvizi (draft version) Meeting: Introductions and program overview. September 3rd, 2021 : Zoom meeting included in introductory email to participants Introductions Brian O'shea, ICER Danielle Barnes, MSU Analytics and Data Solutions Mahmoud Parvizi, Instructor Past experience & current role Cloud facilitator Participant in first Fellowship cohort Pat Bills, Main Instructor Participant Introductions & Discussion Introductions Research synopsis, Research Methods skills (non-IT) Current research computing hurdles, roadblocks, challenges & triumphs How will (or has) cloud computing affected your research? Your goals for this fellowship What do you think the cloud is or is good for? Discussion on availability to complete class and projects Fellowship Program Overview Why and What: 15 minute lecture on broad topics and goals of the course Review our \" syllabus \" Pre-session materials and activities, \"textbook\" Session activity Expectations Projects: Mahmoud Parvizi Lecture: About Cloud Computing Introducing computing vs. research computing vs. HPC vs. cloud computing Learning how to learn about cloud Cloud perceptions vantage points Using workflow computational and computational thinking The interfaces to cloud computing About cloud security Costs and budget overview Acknowledging bias in access to cloud computing across research cultures References: The NIST definition of cloud computing Additional comments from program organizers Demonstration: Using the Azure Portal A quick, live demonstration orienting you to the Azure portal. Our next session activities will include a more thorough workshop on creating cloud computing resources Questions and Discussion What things are at the top of your mind as you begin this program? Which of these topics resonates with your previous experience using computing or cloud computing (if any)?","title":"1. Introduction"},{"location":"session_introduction/#session-1-introduction-to-the-2021-22-msu-cloud-fellowship","text":"You don't have to face the clouds alone","title":"Session 1: Introduction to the 2021-22 MSU Cloud Fellowship"},{"location":"session_introduction/#welcome","text":"The goals of this session are to orient you to this program, set up our technology, introduce ourselves, provide some background on cloud computing, and discuss what all of our expectations are. For this session, like the others, we have some pre-session activities for the week, followed by a meeting Friday, September 3, from 2:00-3:30pm.","title":"Welcome!"},{"location":"session_introduction/#activities","text":"Please complete the following activities prior to our first synchronous meeting September 3. Complete a Brief Survey All 2021-22 participants were sent an introductory email that included a link to a brief survey. preferences and techmology exposure. Please complete this survey prior to our first meeting. Introduce yourself on Microsoft Teams You should have all been given access to a Team \"MSU ICER Cloud Fellowship\" via your NetID. Please log in to Teams (via the web https://teams.microsoft.com/ or using the Teams client) Post a new message in the \"general\" channel just saying \"hello\" and include your name, department and how you prefer to be addressed. If necessary MSU IT has documentation about MS Teams here: https://tech.msu.edu/technology/collaborative-tools/spartan365/ ( the link on that page requires yet another MSU log-in) Confirm Access to Azure Portal Go to https://portal.azure.com . Log in with your MSU netid and password. Ensure you can access the Azure main web \"portal.\" You don't need to (and shouldn't) create any new resources or work with this website; simply confirm you have access. You may see a list of \"resources\" and will introduce Azure during our first meeting. If you have any issues, trouble with these activities, or won't be able to attend the introductory meeting, or have any questions at all about your participating in the fellowship, please contact us . Note there will be time for questions and dicussion during our first meeting.","title":"Activities:"},{"location":"session_introduction/#readings","text":"Chapter 1: Orienting in the cloud universe from \"Cloud Computing for Science and Engineering\", Foster and Gannon ( Alternative link to publisher preview chapter ) Using Cloud Computing for Academic Research , Mahmoud Parvizi (draft version)","title":"Readings"},{"location":"session_introduction/#meeting-introductions-and-program-overview","text":"September 3rd, 2021 : Zoom meeting included in introductory email to participants","title":"Meeting: Introductions and program overview."},{"location":"session_introduction/#introductions","text":"Brian O'shea, ICER Danielle Barnes, MSU Analytics and Data Solutions Mahmoud Parvizi, Instructor Past experience & current role Cloud facilitator Participant in first Fellowship cohort Pat Bills, Main Instructor","title":"Introductions"},{"location":"session_introduction/#participant-introductions-discussion","text":"Introductions Research synopsis, Research Methods skills (non-IT) Current research computing hurdles, roadblocks, challenges & triumphs How will (or has) cloud computing affected your research? Your goals for this fellowship What do you think the cloud is or is good for? Discussion on availability to complete class and projects","title":"Participant Introductions &amp; Discussion"},{"location":"session_introduction/#fellowship-program-overview","text":"Why and What: 15 minute lecture on broad topics and goals of the course Review our \" syllabus \" Pre-session materials and activities, \"textbook\" Session activity Expectations Projects: Mahmoud Parvizi","title":"Fellowship Program Overview"},{"location":"session_introduction/#lecture-about-cloud-computing","text":"Introducing computing vs. research computing vs. HPC vs. cloud computing Learning how to learn about cloud Cloud perceptions vantage points Using workflow computational and computational thinking The interfaces to cloud computing About cloud security Costs and budget overview Acknowledging bias in access to cloud computing across research cultures References: The NIST definition of cloud computing","title":"Lecture: About Cloud Computing"},{"location":"session_introduction/#additional-comments-from-program-organizers","text":"","title":"Additional comments from program organizers"},{"location":"session_introduction/#demonstration-using-the-azure-portal","text":"A quick, live demonstration orienting you to the Azure portal. Our next session activities will include a more thorough workshop on creating cloud computing resources","title":"Demonstration: Using the Azure Portal"},{"location":"session_introduction/#questions-and-discussion","text":"What things are at the top of your mind as you begin this program? Which of these topics resonates with your previous experience using computing or cloud computing (if any)?","title":"Questions and Discussion"},{"location":"session_introduction/exercise_portal_walkthrough/","text":"Exercise: Azure Portal Walk-through Cloud Fellowship Introductory Session This is an exercise to get an introduction to how to use the Web interface to Microsoft Azure. The Azure portal is one of several ways to interface with Azure See our Cloud Glossary for definitions of terms used in this walkthrough including \" resource \", \" azure resource manager \" and \" resource group \" Azure's documentation about the portal is here: LINK NEEDED Log-in to https://portal.azure.com orientation: dashboard view. T Azure portal is organized into panels that show some aspect of your cloud account. Note that this may be changed and you probably will want to change it. Note that the first pane is a list of resources, and we don't have any resources yet you won't see anything. Search bar: at the top of the screen is white box in which you can type search terms include the kind of resource you want to see or create, or part of the name of specific resource you've created.","title":"Exercise: Azure Portal Walk-through"},{"location":"session_introduction/exercise_portal_walkthrough/#exercise-azure-portal-walk-through","text":"","title":"Exercise: Azure Portal Walk-through"},{"location":"session_introduction/exercise_portal_walkthrough/#cloud-fellowship-introductory-session","text":"This is an exercise to get an introduction to how to use the Web interface to Microsoft Azure. The Azure portal is one of several ways to interface with Azure See our Cloud Glossary for definitions of terms used in this walkthrough including \" resource \", \" azure resource manager \" and \" resource group \" Azure's documentation about the portal is here: LINK NEEDED Log-in to https://portal.azure.com orientation: dashboard view. T Azure portal is organized into panels that show some aspect of your cloud account. Note that this may be changed and you probably will want to change it. Note that the first pane is a list of resources, and we don't have any resources yet you won't see anything. Search bar: at the top of the screen is white box in which you can type search terms include the kind of resource you want to see or create, or part of the name of specific resource you've created.","title":"Cloud Fellowship Introductory Session"},{"location":"session_introduction/intro_to_cloud_interfaces/","text":"Interfacing with Cloud Services Cloud Services are by design DIY or on-demand and hence need a programming interface to create cloud resources. This is only possible becuase inside the data center, computer configuration can be done completely with code, also knows as \"Infrastructure as Code\" (IaC). Amazon's insight was that they could slap a website on top of that, put a system for tracking (metering) usage, and sell it. All of the cloud companies as their base use a web interface, so-called REST API . Knowing the details of REST is not important but it's often the basis for all of the other style of interfaces. Here is an example web api URL for weather forecast , with parameters for coordinates, units and format of output https://www.7timer.info/bin/astro.php?lon=113.2&lat=23.1&ac=0&unit=metric&output=json&tzshift=0 Very few researchers would ever use the REST api directly, instead would use the web interface or even better the command line or programming language interface which achieves the same goal with less work. In Azure, everything you could possibly create is called a \"resource:\" a machine, a data service, a single network address. The system to work with Azure resources is the \"Azure Resource Manager\" or ARM and the primary interface for the Resource Manager is their web (REST) api. You may see references to resources in documentation and that means any web doo-dad. Summary of Cloud Interfaces This summary is focused on Microsoft Azure, but the other cloud companies have similar concepts. Graphical Web Interface Most people want a graphical user interface, and for azure that's the \"Portal\" or https://portal.azure.com . For Google cloud it's the \"console\" and for AWS it's also called the console. See below for an introduction to using the portal. Note that the Azure portal and Google console both have web-based terminals that allow you to use the CLI directly in the web interface. Desktop Applications Azure provides some desktop applications for working with a few of the widely used cloud services : Azure Storage Explorer: https://azure.microsoft.com/en-us/features/storage-explorer/ Can create cloud storage and upload/download data. We will use that for our session on Storage Azure Data Studio: https://docs.microsoft.com/en-us/sql/azure-data-studio/what-is-azure-data-studio?view=sql-server-ver15 Can connect to and work with data systems (such as databases ) that are on your computer, on a system on campus, or hosted in Azure Command Line For those not familar wiht the command line, see https://www.digitalocean.com/community/tutorials/an-introduction-to-the-linux-terminal for linux and for Windows Powershell see https://programminghistorian.org/en/lessons/intro-to-powershell The command line interface is a great way to interact with cloud services because it's imperative and all options are specified in a single command. With the web interface, you may have to hunt through the user interface to find the checkbox for an option, but for command line Azure has two command line interfaces: The \"CLI\" which is based on Linux and will work in any linux or Mac terminal (or shell script) and the \"Powershell\" interface which is for Windows Powershell users. Since Powershell has been ported to Linux and Mac and the Linux Shell and Azure CLI can also be used on Windows, so both are operating system independent but in practice, Windows users use powershell and everyone else uses the CLI. Your choice depends on the kinds of other systems you'll be working with. For example, the MSU HPC uses Linux command shell but Windows servers and other Windows services like SQLServer work well with Powershell. SDK : Software Developer Kit A \"software developer kit\" is simply a collection of utilities, libraries/packages and documentation for a specific language to work with a specific service. All the cloud vendors have SDKs, and they all have SDKs for Python. SDK simply means you can create, delete, interact with cloud services from your program. Why leave python or R if don't have to? Python SDK All cloud vendors have SDKs to work with Python. After installing the SDK, you import the libraries and issue commands to create resources, then use those cloud resources to do work via client libraries (either Azure libraries or others). Azure has extensive documentation for using Python: https://docs.microsoft.com/en-us/azure/developer/python/?view=azure-python Example Azure code to create cloud storage, compared with how you would see the resources in the azure portal, and similar commands using the CLI : https://docs.microsoft.com/en-us/azure/developer/python/azure-sdk-example-storage?tabs=cmd Note that Azure also has a service \"Azure Cloud Functions\" that run python that are not the same thing as the SDK. These are 'serverless' resources (similar to AWS Lambda), which we will learn about later in the course. Both AWS and Google Cloud have Python SDKs, and probably other vendors. R Unlike the other vendors, Microsoft maintains an SDK for R Users which allows you to create cloud services directly from Rstudio. See their github pages https://github.com/Azure/AzureR and excellent documentation throughout the packages. Cloud company frameworks In addition to the \"SDKs\" for existing languages, cloud companies often have their own frameworks for using code to build (provision) infrastructure. For Azure, these are \"ARM Templates\" and for AWS it's Cloud Formation . Azure: ARM templates Azure has a system for submitting a template, or essentially a configuration file to the Azure Resource Manager (ARM) that dictates which cloud resources are to be created. For Azure these are JSON-formatted files that are \"declaritive\" (rather than procedural or imperative like Python). The best way to understand these is to explore the many that Microsoft posts on github, and to try them. If you do, be mindful to delete any resources you create so as not to be charged for them. - Overview of ARM templates: https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview - Quick start ARM templates (github): https://github.com/Azure/AzureStack-QuickStart-Templates Third-party programming with Terraform There are other ways to 'program the cloud' from companies outside of the big three. One widely used frame is \"Terraform\" from Hashicorp, not affiliated with any cloud company. The ad - Terraform: https://www.terraform.io - Can work with any vendor including Azure - Often more readable than ARM templates, Syntax remarkably simple - Focus on maintaining consistent systems ( declarative) - Does not cover all services, but can fall back to ARM templates when necessary Building Cloud from Cloud This may not be an 'interface' but is operationally similar. It's possible to use some of the above interfaces on existing cloud services, e.g. creating new cloud resources automaticaly from existing cloud resources. Your cloud architecture may need different types of resources, or parameterized resources only as needed (e.g. depending data inputs, a web-gateway for cloud on demand). For example Azure Logic Apps can create resources when they are run (e.g. provision and start a computer) and a logic app can be triggered by events such as when a new file is created, or using a web api (e.g. REST POST command that sends data and parameters). This adds significant complexity and is only valuable for event-based systems opens up using the cloud as a big computer programming language. References See our references page for curated Azure links. For AWS, see https://aws.amazon.com/tools/ and more about the AWS CLI: https://aws.amazon.com/cli/","title":"Interfacing with Cloud Services"},{"location":"session_introduction/intro_to_cloud_interfaces/#interfacing-with-cloud-services","text":"Cloud Services are by design DIY or on-demand and hence need a programming interface to create cloud resources. This is only possible becuase inside the data center, computer configuration can be done completely with code, also knows as \"Infrastructure as Code\" (IaC). Amazon's insight was that they could slap a website on top of that, put a system for tracking (metering) usage, and sell it. All of the cloud companies as their base use a web interface, so-called REST API . Knowing the details of REST is not important but it's often the basis for all of the other style of interfaces. Here is an example web api URL for weather forecast , with parameters for coordinates, units and format of output https://www.7timer.info/bin/astro.php?lon=113.2&lat=23.1&ac=0&unit=metric&output=json&tzshift=0 Very few researchers would ever use the REST api directly, instead would use the web interface or even better the command line or programming language interface which achieves the same goal with less work. In Azure, everything you could possibly create is called a \"resource:\" a machine, a data service, a single network address. The system to work with Azure resources is the \"Azure Resource Manager\" or ARM and the primary interface for the Resource Manager is their web (REST) api. You may see references to resources in documentation and that means any web doo-dad.","title":"Interfacing with Cloud Services"},{"location":"session_introduction/intro_to_cloud_interfaces/#summary-of-cloud-interfaces","text":"This summary is focused on Microsoft Azure, but the other cloud companies have similar concepts.","title":"Summary of Cloud Interfaces"},{"location":"session_introduction/intro_to_cloud_interfaces/#graphical-web-interface","text":"Most people want a graphical user interface, and for azure that's the \"Portal\" or https://portal.azure.com . For Google cloud it's the \"console\" and for AWS it's also called the console. See below for an introduction to using the portal. Note that the Azure portal and Google console both have web-based terminals that allow you to use the CLI directly in the web interface.","title":"Graphical Web Interface"},{"location":"session_introduction/intro_to_cloud_interfaces/#desktop-applications","text":"Azure provides some desktop applications for working with a few of the widely used cloud services : Azure Storage Explorer: https://azure.microsoft.com/en-us/features/storage-explorer/ Can create cloud storage and upload/download data. We will use that for our session on Storage Azure Data Studio: https://docs.microsoft.com/en-us/sql/azure-data-studio/what-is-azure-data-studio?view=sql-server-ver15 Can connect to and work with data systems (such as databases ) that are on your computer, on a system on campus, or hosted in Azure","title":"Desktop Applications"},{"location":"session_introduction/intro_to_cloud_interfaces/#command-line","text":"For those not familar wiht the command line, see https://www.digitalocean.com/community/tutorials/an-introduction-to-the-linux-terminal for linux and for Windows Powershell see https://programminghistorian.org/en/lessons/intro-to-powershell The command line interface is a great way to interact with cloud services because it's imperative and all options are specified in a single command. With the web interface, you may have to hunt through the user interface to find the checkbox for an option, but for command line Azure has two command line interfaces: The \"CLI\" which is based on Linux and will work in any linux or Mac terminal (or shell script) and the \"Powershell\" interface which is for Windows Powershell users. Since Powershell has been ported to Linux and Mac and the Linux Shell and Azure CLI can also be used on Windows, so both are operating system independent but in practice, Windows users use powershell and everyone else uses the CLI. Your choice depends on the kinds of other systems you'll be working with. For example, the MSU HPC uses Linux command shell but Windows servers and other Windows services like SQLServer work well with Powershell.","title":"Command Line"},{"location":"session_introduction/intro_to_cloud_interfaces/#sdk-software-developer-kit","text":"A \"software developer kit\" is simply a collection of utilities, libraries/packages and documentation for a specific language to work with a specific service. All the cloud vendors have SDKs, and they all have SDKs for Python. SDK simply means you can create, delete, interact with cloud services from your program. Why leave python or R if don't have to?","title":"SDK : Software Developer Kit"},{"location":"session_introduction/intro_to_cloud_interfaces/#python-sdk","text":"All cloud vendors have SDKs to work with Python. After installing the SDK, you import the libraries and issue commands to create resources, then use those cloud resources to do work via client libraries (either Azure libraries or others). Azure has extensive documentation for using Python: https://docs.microsoft.com/en-us/azure/developer/python/?view=azure-python Example Azure code to create cloud storage, compared with how you would see the resources in the azure portal, and similar commands using the CLI : https://docs.microsoft.com/en-us/azure/developer/python/azure-sdk-example-storage?tabs=cmd Note that Azure also has a service \"Azure Cloud Functions\" that run python that are not the same thing as the SDK. These are 'serverless' resources (similar to AWS Lambda), which we will learn about later in the course. Both AWS and Google Cloud have Python SDKs, and probably other vendors.","title":"Python SDK"},{"location":"session_introduction/intro_to_cloud_interfaces/#r","text":"Unlike the other vendors, Microsoft maintains an SDK for R Users which allows you to create cloud services directly from Rstudio. See their github pages https://github.com/Azure/AzureR and excellent documentation throughout the packages.","title":"R"},{"location":"session_introduction/intro_to_cloud_interfaces/#cloud-company-frameworks","text":"In addition to the \"SDKs\" for existing languages, cloud companies often have their own frameworks for using code to build (provision) infrastructure. For Azure, these are \"ARM Templates\" and for AWS it's Cloud Formation .","title":"Cloud company frameworks"},{"location":"session_introduction/intro_to_cloud_interfaces/#azure-arm-templates","text":"Azure has a system for submitting a template, or essentially a configuration file to the Azure Resource Manager (ARM) that dictates which cloud resources are to be created. For Azure these are JSON-formatted files that are \"declaritive\" (rather than procedural or imperative like Python). The best way to understand these is to explore the many that Microsoft posts on github, and to try them. If you do, be mindful to delete any resources you create so as not to be charged for them. - Overview of ARM templates: https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/overview - Quick start ARM templates (github): https://github.com/Azure/AzureStack-QuickStart-Templates","title":"Azure: ARM templates"},{"location":"session_introduction/intro_to_cloud_interfaces/#third-party-programming-with-terraform","text":"There are other ways to 'program the cloud' from companies outside of the big three. One widely used frame is \"Terraform\" from Hashicorp, not affiliated with any cloud company. The ad - Terraform: https://www.terraform.io - Can work with any vendor including Azure - Often more readable than ARM templates, Syntax remarkably simple - Focus on maintaining consistent systems ( declarative) - Does not cover all services, but can fall back to ARM templates when necessary","title":"Third-party programming with Terraform"},{"location":"session_introduction/intro_to_cloud_interfaces/#building-cloud-from-cloud","text":"This may not be an 'interface' but is operationally similar. It's possible to use some of the above interfaces on existing cloud services, e.g. creating new cloud resources automaticaly from existing cloud resources. Your cloud architecture may need different types of resources, or parameterized resources only as needed (e.g. depending data inputs, a web-gateway for cloud on demand). For example Azure Logic Apps can create resources when they are run (e.g. provision and start a computer) and a logic app can be triggered by events such as when a new file is created, or using a web api (e.g. REST POST command that sends data and parameters). This adds significant complexity and is only valuable for event-based systems opens up using the cloud as a big computer programming language.","title":"Building Cloud from Cloud"},{"location":"session_introduction/intro_to_cloud_interfaces/#references","text":"See our references page for curated Azure links. For AWS, see https://aws.amazon.com/tools/ and more about the AWS CLI: https://aws.amazon.com/cli/","title":"References"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/","text":"Practical Introduction for Researchers on Azure Introducing cloud computing vs. research computing Learning how to learn about cloud You may have looked at the various websites and poked around the web, and found it's just not clear at all how cloud computing may be helpful to you, even though it all sounds great. The challenge for researchers learning about cloud is that most cloud documentation for isn't written for you. Cloud training and documentation are mostly written for IT professionals like system admins and architects, software developers, business people, and agency managers. Researchers tend to be a little of all of those things. Training materials ofen have an embedded conceptual models of computing, and this model depend on your approach. Our goal as researchers is to get our work (or the work of our lab) done, not to build systems used by hundreds of people or for business purposes. That can make it difficult to decipher which kind of cloud service will work best for your use case. As Dr. Parvizi writes, cloud is very different from using traditional research-oriented technology like workstations or HPC. There are hundreds of services to choose from but we find many researchers will reach for the conceptually straightfoward path of creating cloud computers and install what they need. Our goal for this fellowship is to provide context and background, and help you explore some of the so-called \"cloud native\" technologies like \"serverless\" systems that let you run your scripts without dealing with operating system installs. The target audience for most cloud companies are IT professional building IT systems for public or institutational use. Let's call this the \"Systems\" perspective: built for someone else to use, e.g. a service must be available at scale and ultimately reliable documentation is in terms of historic IT systems house in on-premise corporate data centers \"production\" systems often very concerned with authentication and security The second audience are corporate software engineers, or dot-com or app software companies. We'll call this the \"developer perspective need to easily create systems to run their software for demonstration and testing complete interelate goal is a robust sytem that can handle many users, e.g. the performance of a \"production\" systems are often top of mind And finally most closely related to your work are data science, \"machine learning\" or an \"analytical\" perspective systems to achieve computation. May work like our local HPC systems built only for small work groups, not for public can still scale but must be reproducible to document methods even this documentation can quickly veer off in to building production systems for companies to re-run inference say many times a data or with a constant stream of corporate data What is are the goals from research perspective for cloud computing? Custom: can create customized resources only when you need it On-demand: can run ad-hoc computations on those on-demand resources Reproducible: a computation can be re-run as needed, meaning cloud resources can be easily re-recreated to re-run your computations. Cost effective: unlike commerical applications, more users does not mean more revenue. Budgets are fixed and the pay-as-you-go model requires vigilance to not over-spend. Others? What documentation is available for researchers? There are general, conceptual introductions and dicussions for academics. https://cloud4scieng.org/ Book and website from Ian Foster and Gannon (U. Chicago), the text used for this fellowship. https://cloudmaven.github.io/documentation/ from the eScience institute of the University of Washington. It doesn't appear to be maintained but may have some good resources. Original github repositories are https://github.com/cloudmaven https://cloudbank-project.github.io/cb-resources/ Seems to be a succesor to the 'cloudmaven' documentation above as members from cloudmaven are contributing here. Cloudbank training videos NIST defintions of cloud: Service Levels and You The NIST definition of cloud computing defines service models, but what does \"X as a service\" actually mean, and where are the lines drawn? Like the species concept in biology, it's not always cut and dried, but can be thought of as a spectrum Infrastructure (aaS): Nuts and bolts, DIY, Lego. You need understanding of computing architecture as these services Everything in between: Platforms or pre-configured and managed infrastructure Software (aaS): Little to no configuration is needed but these system may be programmable and integrated with other services. E.g. Office 365, Google Drive The sweet-spot for researhces who do not have time to aquire the expertise to manage low-level infrastructure and need something more flexible and programmable than Software, are the platforms. These are often more expensive than DIY infrastruture, but are faster to provision and provide security controls. Cloud \"Services\" and the Packaging of Open Source Systems Case Study on Open Source system as Cloud service: MySQL Open source, free Relational database, e.g. SQL. Relational databases store tabular, linked data. Used by some bioinformatics packages (e.g. https://orthomcl.org/orthomcl/app ) and millions of websites. project: https://www.mysql.com/products/community/ and https://mariadb.org/ DIY on Azure instructions (eg Iaas): someone's DIY Mysql - don't follow these, they are old and may not work, just an example of the steps involved Azure MySQL Service (e.g PaaS): Azure Database for MySQL AWS MySQL Service: Amazon RDS for MySQL Google MySQL Service Cloud SQL other companies, such as Aiven for MySQL Spin-offs: Amazon also offers AWS Aurora which is a cloud scale database service that is MySQL-compatible see Amazon Aurora Paper What would a \"SaaS\" offering for tabular data look like? A \"Google Docs\" for Databases? Perhaps https://www.airtable.com/ ? Caveats and help As part of this fellowship, our goal is to help you translate documentation written for the systems and developer perspectives into a research perspective. The cloud services themselves are always changing, even slightly, making technology-specific tutorials obsolete in months. For example last year Azure had a \"Notebook Service\" for running Python notebooks, and now there is this in place of the regular documentation: What happened to Azure Notebooks? There are new services and bundles created all the time that may be competing or superior choices for doing research If you are unsure, ask us. See the contact page or use our Teams channel. During the cloud fellowship we are here to provide some answers, context for what you are seeing, or possible directions to explore. Cloud companies have help desks and many resources for anyone using their services or potential customers and we may be able to connect you with those. The Interfaces to Cloud computing A defining aspect of cloud computing is that it's \"on-demand\" hence creation of resources must be automated or \"scriptable.\" All Cloud providers have various 'interfaces' to their services that include both programmatic and web-based. See [Intro to Cloud Interfaces]](intro_to_cloud_interfaces.md) for more information about Azure's interfaces. Using workflow and computational thinking Karl Popper stated that \"non-reproducible single occurrences are of no significance to science\" ( K Popper, \"The Logic of Scientific Discovery\", English translation from Routledge, London, 1992, p. 66. ) and this is a significant issue for research computing and one of much academic work. To enhance reproducibility in your own work, consider documenting all the steps needed for create the environment to run your computation. For many on-premise academic systems (e.g. the MSU HPCC), we depend upon the system administrators to create that environment, but we may install and configure all the software we need to run our code. Workflow thinking can apply to the scienfic domain itself (e.g. \"Principles for data analysis workflows\" https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008770 ) and to the provisioning of the cloud computing environment. That is, we may use a workflow system for creating all the cloud stuff we need, and then a different workflow system that runs on that cloud stuff. One example is we may create an HPC system on Azure using templates and then launch the Slurm scheduler on that HPC to run our jobs. ( note the complexity of running our own HPC is beyond the scope of this fellowship and used as an example only ) A major advantage to using workflows or code for provisioning your cloud computing components is that you can turn them off and delete them when you are done, and restart when needed. This can dramatically save on costs . This does not necessarily have to be a complete programming system, but some combination of well written instructions and a collection of scripts so that your colleague (or yourself 6 months from now) can recreate everything you need. About Cloud Security Security and Risk management is an important issue even for researchers who's data may not be sensitive or even open source. Attackers may use the services you create to launch attacks on other services, leaving you liable. Finding a readable list of security recommendations for cloud computing is a challenge for all the reasons outlined above. Our textbook has a nice chaper outlining cloud security The \"Shared responsibility\" model for cloud computing takes a model of computing components, and shows how much of each component the user is responsible for security: Microsoft Model of Shared Responsibility for Cloud Computing We will come back to this model as we gain deeper understanding of research computing on the cloud. Costs and Budget overview We will cover the details of pricing, examine costs, and controlling costs in future sessions. Each participant has a budget for their Azure resources that they should stay under. If you need to use Google or AWS we need to make additional arrangements but your first step would be to acquire a free starter account with these companies (e.g. using a gmail address). Briefly: Costs are more than just dollars for services. Consider [Total Cost] = ( $ + Time + Risk ) [Total Time] = ( development time + wait time + compute time ) Risk is rarely non-significant. Never say \"I won't get hacked...\" In the Service level spectrum, the higher level \"platform\" services may have higher monetary costs but often reduce time and risk HPCC vs Cloud Dr. Parvizi's white paper outlines the challenges of adapting HPC workflows to cloud computing. The HPC is amazing effective at running all kinds of systems at very list cost, if any, to MSU researchers. Many systems not designed for HPC can be adjusted to run in that environment. However, just like many workflows are difficult to port from HPC to cloud, some cloud workflows are difficult run on HPC (but never say never): Big Data systems (see magpie project) Long-running Data Systems like database servers Web-based applications (see on-demand project) Containers (see singularity project) Acknowledging bias in access to cloud computing across research cultures Additional comments from instructors and organizers Summary and additional comments","title":"Practical Introduction for Researchers on Azure"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#practical-introduction-for-researchers-on-azure","text":"","title":"Practical Introduction for Researchers on Azure"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#introducing-cloud-computing-vs-research-computing","text":"","title":"Introducing cloud computing vs. research computing"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#learning-how-to-learn-about-cloud","text":"You may have looked at the various websites and poked around the web, and found it's just not clear at all how cloud computing may be helpful to you, even though it all sounds great. The challenge for researchers learning about cloud is that most cloud documentation for isn't written for you. Cloud training and documentation are mostly written for IT professionals like system admins and architects, software developers, business people, and agency managers. Researchers tend to be a little of all of those things. Training materials ofen have an embedded conceptual models of computing, and this model depend on your approach. Our goal as researchers is to get our work (or the work of our lab) done, not to build systems used by hundreds of people or for business purposes. That can make it difficult to decipher which kind of cloud service will work best for your use case. As Dr. Parvizi writes, cloud is very different from using traditional research-oriented technology like workstations or HPC. There are hundreds of services to choose from but we find many researchers will reach for the conceptually straightfoward path of creating cloud computers and install what they need. Our goal for this fellowship is to provide context and background, and help you explore some of the so-called \"cloud native\" technologies like \"serverless\" systems that let you run your scripts without dealing with operating system installs. The target audience for most cloud companies are IT professional building IT systems for public or institutational use. Let's call this the \"Systems\" perspective: built for someone else to use, e.g. a service must be available at scale and ultimately reliable documentation is in terms of historic IT systems house in on-premise corporate data centers \"production\" systems often very concerned with authentication and security The second audience are corporate software engineers, or dot-com or app software companies. We'll call this the \"developer perspective need to easily create systems to run their software for demonstration and testing complete interelate goal is a robust sytem that can handle many users, e.g. the performance of a \"production\" systems are often top of mind And finally most closely related to your work are data science, \"machine learning\" or an \"analytical\" perspective systems to achieve computation. May work like our local HPC systems built only for small work groups, not for public can still scale but must be reproducible to document methods even this documentation can quickly veer off in to building production systems for companies to re-run inference say many times a data or with a constant stream of corporate data What is are the goals from research perspective for cloud computing? Custom: can create customized resources only when you need it On-demand: can run ad-hoc computations on those on-demand resources Reproducible: a computation can be re-run as needed, meaning cloud resources can be easily re-recreated to re-run your computations. Cost effective: unlike commerical applications, more users does not mean more revenue. Budgets are fixed and the pay-as-you-go model requires vigilance to not over-spend. Others?","title":"Learning how to learn about cloud"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#what-documentation-is-available-for-researchers","text":"There are general, conceptual introductions and dicussions for academics. https://cloud4scieng.org/ Book and website from Ian Foster and Gannon (U. Chicago), the text used for this fellowship. https://cloudmaven.github.io/documentation/ from the eScience institute of the University of Washington. It doesn't appear to be maintained but may have some good resources. Original github repositories are https://github.com/cloudmaven https://cloudbank-project.github.io/cb-resources/ Seems to be a succesor to the 'cloudmaven' documentation above as members from cloudmaven are contributing here. Cloudbank training videos","title":"What documentation is available for researchers?"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#nist-defintions-of-cloud-service-levels-and-you","text":"The NIST definition of cloud computing defines service models, but what does \"X as a service\" actually mean, and where are the lines drawn? Like the species concept in biology, it's not always cut and dried, but can be thought of as a spectrum Infrastructure (aaS): Nuts and bolts, DIY, Lego. You need understanding of computing architecture as these services Everything in between: Platforms or pre-configured and managed infrastructure Software (aaS): Little to no configuration is needed but these system may be programmable and integrated with other services. E.g. Office 365, Google Drive The sweet-spot for researhces who do not have time to aquire the expertise to manage low-level infrastructure and need something more flexible and programmable than Software, are the platforms. These are often more expensive than DIY infrastruture, but are faster to provision and provide security controls.","title":"NIST defintions of cloud: Service Levels and You"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#cloud-services-and-the-packaging-of-open-source-systems","text":"Case Study on Open Source system as Cloud service: MySQL Open source, free Relational database, e.g. SQL. Relational databases store tabular, linked data. Used by some bioinformatics packages (e.g. https://orthomcl.org/orthomcl/app ) and millions of websites. project: https://www.mysql.com/products/community/ and https://mariadb.org/ DIY on Azure instructions (eg Iaas): someone's DIY Mysql - don't follow these, they are old and may not work, just an example of the steps involved Azure MySQL Service (e.g PaaS): Azure Database for MySQL AWS MySQL Service: Amazon RDS for MySQL Google MySQL Service Cloud SQL other companies, such as Aiven for MySQL Spin-offs: Amazon also offers AWS Aurora which is a cloud scale database service that is MySQL-compatible see Amazon Aurora Paper What would a \"SaaS\" offering for tabular data look like? A \"Google Docs\" for Databases? Perhaps https://www.airtable.com/ ?","title":"Cloud \"Services\" and the Packaging of Open Source Systems"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#caveats-and-help","text":"As part of this fellowship, our goal is to help you translate documentation written for the systems and developer perspectives into a research perspective. The cloud services themselves are always changing, even slightly, making technology-specific tutorials obsolete in months. For example last year Azure had a \"Notebook Service\" for running Python notebooks, and now there is this in place of the regular documentation: What happened to Azure Notebooks? There are new services and bundles created all the time that may be competing or superior choices for doing research If you are unsure, ask us. See the contact page or use our Teams channel. During the cloud fellowship we are here to provide some answers, context for what you are seeing, or possible directions to explore. Cloud companies have help desks and many resources for anyone using their services or potential customers and we may be able to connect you with those.","title":"Caveats and help"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#the-interfaces-to-cloud-computing","text":"A defining aspect of cloud computing is that it's \"on-demand\" hence creation of resources must be automated or \"scriptable.\" All Cloud providers have various 'interfaces' to their services that include both programmatic and web-based. See [Intro to Cloud Interfaces]](intro_to_cloud_interfaces.md) for more information about Azure's interfaces.","title":"The Interfaces to Cloud computing"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#using-workflow-and-computational-thinking","text":"Karl Popper stated that \"non-reproducible single occurrences are of no significance to science\" ( K Popper, \"The Logic of Scientific Discovery\", English translation from Routledge, London, 1992, p. 66. ) and this is a significant issue for research computing and one of much academic work. To enhance reproducibility in your own work, consider documenting all the steps needed for create the environment to run your computation. For many on-premise academic systems (e.g. the MSU HPCC), we depend upon the system administrators to create that environment, but we may install and configure all the software we need to run our code. Workflow thinking can apply to the scienfic domain itself (e.g. \"Principles for data analysis workflows\" https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008770 ) and to the provisioning of the cloud computing environment. That is, we may use a workflow system for creating all the cloud stuff we need, and then a different workflow system that runs on that cloud stuff. One example is we may create an HPC system on Azure using templates and then launch the Slurm scheduler on that HPC to run our jobs. ( note the complexity of running our own HPC is beyond the scope of this fellowship and used as an example only ) A major advantage to using workflows or code for provisioning your cloud computing components is that you can turn them off and delete them when you are done, and restart when needed. This can dramatically save on costs . This does not necessarily have to be a complete programming system, but some combination of well written instructions and a collection of scripts so that your colleague (or yourself 6 months from now) can recreate everything you need.","title":"Using workflow and computational thinking"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#about-cloud-security","text":"Security and Risk management is an important issue even for researchers who's data may not be sensitive or even open source. Attackers may use the services you create to launch attacks on other services, leaving you liable. Finding a readable list of security recommendations for cloud computing is a challenge for all the reasons outlined above. Our textbook has a nice chaper outlining cloud security The \"Shared responsibility\" model for cloud computing takes a model of computing components, and shows how much of each component the user is responsible for security: Microsoft Model of Shared Responsibility for Cloud Computing We will come back to this model as we gain deeper understanding of research computing on the cloud.","title":"About Cloud Security"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#costs-and-budget-overview","text":"We will cover the details of pricing, examine costs, and controlling costs in future sessions. Each participant has a budget for their Azure resources that they should stay under. If you need to use Google or AWS we need to make additional arrangements but your first step would be to acquire a free starter account with these companies (e.g. using a gmail address). Briefly: Costs are more than just dollars for services. Consider [Total Cost] = ( $ + Time + Risk ) [Total Time] = ( development time + wait time + compute time ) Risk is rarely non-significant. Never say \"I won't get hacked...\" In the Service level spectrum, the higher level \"platform\" services may have higher monetary costs but often reduce time and risk","title":"Costs and Budget overview"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#hpcc-vs-cloud","text":"Dr. Parvizi's white paper outlines the challenges of adapting HPC workflows to cloud computing. The HPC is amazing effective at running all kinds of systems at very list cost, if any, to MSU researchers. Many systems not designed for HPC can be adjusted to run in that environment. However, just like many workflows are difficult to port from HPC to cloud, some cloud workflows are difficult run on HPC (but never say never): Big Data systems (see magpie project) Long-running Data Systems like database servers Web-based applications (see on-demand project) Containers (see singularity project)","title":"HPCC vs Cloud"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#acknowledging-bias-in-access-to-cloud-computing-across-research-cultures","text":"","title":"Acknowledging bias in access to cloud computing across research cultures"},{"location":"session_introduction/lecture_introduction_to_cloud_computing_research/#additional-comments-from-instructors-and-organizers","text":"Summary and additional comments","title":"Additional comments from instructors and organizers"}]}